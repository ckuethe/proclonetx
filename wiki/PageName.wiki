#summary One-sentence summary of this page.

= Introduction =
yaesu programming project

YaeProSuor  YaeProg or something

The windows programming software:
http://www.kc8unj.com/

Heian Software Engineering (Summary In English)
http://hse.dyndns.org/hiroto/RFY_LAB/vx7/e/vx7_8000.htm

Some more engineering data on it:
http://babelfish.altavista.com/urltrurl?lp=ja_en&url=http://hse.dyndns.org/hiroto/RFY_LAB/vx7/vx7_0000.htm

Basic Code Links:
http://babelfish.altavista.com/urltrurl?lp=ja_en&url=http://hse.dyndns.org/hiroto/RFY_LAB/vx7/vx7_8400.htm

In the end I want to be able to do the following for a lot (As many as possible) yaesu radios:
download setttings
edit settings
upload settings
etc

http://ubuntuforums.org/archive/index.php/t-139170.html

In linux to load the serialtousb mod:
http://www.linux-usb.org/USB-guide/x356.html

USB serial converter module: insmod usb-serial.o vendor=0xVVVV product-0xPPPP, where you need to change the VVVV and PPPP to match your device.

The serial port driver uses a major number of 188. Up to sixteen serial ports are supported. To create the appropriate device entries, use the following commands:

mknod /dev/usb/ttyUSB0 c 188 0

You should now be able to plug in a serial device into the adapter,
and use the /dev/usb/ttyUSB0 just as if it were a
normal serial port

serial port info:
http://www.linux.org/docs/ldp/howto/Serial-HOWTO-4.html

serial port communication:
19,200bps, 8bits, Stop-bit:1bit, Parity:none, XON/XOFF control:none

***********************************************************************************

lsusb:

Bus 004 Device 003: ID 0403:6001 Future Technology Devices International, Ltd FT232 USB-Serial (UART) IC

Bus 004 Device 003: ID 0403:6001 Future Technology Devices International, Ltd FT232 USB-Serial (UART) IC
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            0 (Defined at Interface level)
  bDeviceSubClass         0
  bDeviceProtocol         0
  bMaxPacketSize0         8
  idVendor           0x0403 Future Technology Devices International, Ltd
  idProduct          0x6001 FT232 USB-Serial (UART) IC
  bcdDevice            4.00
  iManufacturer           1
  iProduct                2
  iSerial                 0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           32
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0
    bmAttributes         0x80
      (Bus Powered)
    MaxPower               90mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       255 Vendor Specific Class
      bInterfaceSubClass    255 Vendor Specific Subclass
      bInterfaceProtocol    255 Vendor Specific Protocol
      iInterface              2
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x02  EP 2 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               0
cannot read device status, Operation not permitted (1)

***********************************************************************************

possibly useful links:
http://pyvisa.sourceforge.net/
http://docs.python.org/lib/module-struct.html
http://pyserial.sourceforge.net/
http://pyvisa.sourceforge.net/pyvisa/node4.html

Good one:http://blog.makezine.com/archive/2005/05/control_the_par.html
http://mediamatrix.peavey.com/nion/resources/PythonSerial.htm

SVN:

# Non-members may check out a read-only working copy anonymously over HTTP.
svn checkout http://proclonetx.googlecode.com/svn/trunk/ proclonetx-read-only


# Project members authenticate over HTTPS to allow committing changes.
svn checkout https://proclonetx.googlecode.com/svn/trunk/ proclonetx --username <username>


--
Steps:
modprobe usbserial

aaron@coreprime:~$ lsmod | grep usbserial
usbserial              35816  1 ftdi_sio
usbcore               145516  9 ftdi_sio,usbserial,usblp,usb_storage,usbhid,libusual,ehci_hcd,uhci_hcd

aaron@coreprime:~$ ls -l /dev/ttyUSB0
crw-rw---- 1 root dialout 188, 0 2008-02-21 23:06 /dev/ttyUSB0

add python pyserial module:
http://superb-east.dl.sourceforge.net/sourceforge/pyserial/pyserial-2.2.zip
http://sourceforge.net/projects/pyserial/


Todo:
PythonCard for GUI

how to pull the data from the device?

********************************************

sample python serial application:




********************************************

sample reading from device python:




















<basic files below>

LOADVX7C.BAS

10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒNƒ[ƒ“ƒf[ƒ^‘‚«ž‚ÝƒvƒƒOƒ‰ƒ€ Ver3.00 (Oct 6 2002)
10040 '
10050 'Copyright by Heian Software Engineering
10060 '(C)2002 H.S.E. Allrights reserved.
10070 '
10080 '**********************************************************
10090 '
10100 '
10110 '
10120 *START
10130 CLEAR
10140 DEFINT A-Z
10150 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10160 '
10170 D.MAX=&H3FFF
10180 RX.BUFF.SIZE=320:'ŽóMƒoƒbƒtƒ@ƒTƒCƒY
10190 '
10200 KEY 2,"SYSTEM"+CHR$(&HD)
10210 '
10220 VERSION$="LOADVX7C.BAS VER 3.00"
10230 '
10240 COMPORT.NAME$="COM1:N81NN":'’ÊMƒ|[ƒgƒtƒ@ƒCƒ‹ƒfƒBƒXƒNƒŠƒvƒ^
10250 COMPORT.SPEED=8:'’ÊM‘¬“x 8:19200,0:SPEEDƒRƒ}ƒ“ƒh‚É‚æ‚é
10260 G.SEND.DATA.TO.TRX.W=1000:'‘—MŽžŠÔ’²®
10270 '
10280 GOTO *MAIN
10290 '
10300 '
10310 *READ.HEX.CHR
10320 DIM HEX.CHR$(255)
10330 FOR READ.HEX.CHR.W=0 TO 255:HEX.CHR$(READ.HEX.CHR.W)=RIGHT$("0"+HEX$(READ.HEX.CHR.W),2):NEXT
10340 RETURN
10350 '
10360 *READ.ERROR.MES
10370 DIM ERROR.MES$(100)
10380 RESTORE *READ.ERROR.MES
10390 *READ.ERROR.MES.1000
10400 READ ERROR.MES.W
10410 IF ERROR.MES.W<0 THEN RETURN
10420 READ ERROR.MES$(ERROR.MES.W)
10430 GOTO *READ.ERROR.MES.1000
10440 DATA 0,"--- ³íI—¹(000) ---"
10450 DATA 60,"*** “ü—Íƒf[ƒ^‚ª•s‘«‚µ‚Ä‚¢‚Ü‚·B(060) ***"
10460 DATA 61,"*** “ü—Íƒf[ƒ^\‘¢‚ÉŒë‚è‚ª‚ ‚è‚Ü‚·B(061) ***"
10470 DATA 80,"*** –³ü‹@‚Æ‚Ì’ÊM‚ÅˆÙí‚ª”­¶‚µ‚Ü‚µ‚½B(080) ***"
10480 DATA 81,"*** ‰ž“šM†‚ª•s³‚Å‚·B(081) ***"
10490 DATA 90,"*** ‹­§I—¹(090) ***"
10500 DATA -1,""
10510 '
10520 *RX.BUFF.INIT
10530 DIM RX.BUFF(RX.BUFF.SIZE-1)
10540 GOSUB *RX.BUFF.CLEAR
10550 RETURN
10560 '
10570 *RX.BUFF.CLEAR
10580 G.RX.BUFF.RP=0:'“Ç‚Ýo‚µƒ|ƒCƒ“ƒ^
10590 G.RX.BUFF.WP=0:'‘‚«ž‚Ýƒ|ƒCƒ“ƒ^
10600 G.RX.BUFF.N=0 :'ƒoƒbƒtƒ@“àƒf[ƒ^”
10610 G.RX.BUFF.OV=0:'ƒoƒbƒtƒ@ƒI[ƒo[ƒtƒ[
10620 G.RX.BUFF.EM=0:'ƒoƒbƒtƒ@“àƒGƒ“ƒvƒeƒB
10630 RETURN
10640 '
10650 *RX.BUFF.WRITE
10660 IF G.RX.BUFF.N>=RX.BUFF.SIZE THEN G.RX.BUFF.OV=-1:RETURN
10670 RX.BUFF(G.RX.BUFF.WP)=G.RX.WRITE.DATA
10680 G.RX.BUFF.WP=(G.RX.BUFF.WP+1) MOD RX.BUFF.SIZE
10690 G.RX.BUFF.N=G.RX.BUFF.N+1
10700 G.RX.BUFF.OV=0
10710 RETURN
10720 '
10730 *RX.BUFF.READ
10740 IF G.RX.BUFF.N=0 THEN G.RX.BUFF.EM=-1:RETURN
10750 G.RX.READ.DATA=RX.BUFF(G.RX.BUFF.RP)
10760 G.RX.BUFF.RP=(G.RX.BUFF.RP+1) MOD RX.BUFF.SIZE
10770 G.RX.BUFF.N=G.RX.BUFF.N-1
10780 G.RX.BUFF.EM=0
10790 RETURN
10800 '
10810 '
10820 *INIT.DATA.TABLE
10830 DIM D(D.MAX)
10840 FOR INIT.DATA.TABLE.W=0 TO D.MAX:D(INIT.DATA.TABLE.W)=-1:NEXT
10850 DEF FNADRS.D$(A)=HEX.CHR$(A \ 256)+HEX.CHR$(A MOD 256)+" : "+HEX.CHR$(D(A))
10860 RETURN
10870 '
10880 *READ.DATA.TABLE
10890 READ.DATA.TABLE.N=&H3F52
10900 READ.DATA.TABLE.NC=0
10910 *READ.DATA.TABLE.0000
10920 IF EOF(2) THEN READ.DATA.TABLE.ERR=60:RETURN
10930 LINE INPUT #2,READ.DATA.TABLE.I$
10940 IF READ.DATA.TABLE.I$="" THEN GOTO *READ.DATA.TABLE.0000
10950 IF LEFT$(READ.DATA.TABLE.I$,1)="'" THEN GOTO *READ.DATA.TABLE.0000
10960 IF LEN(READ.DATA.TABLE.I$)<>9 THEN READ.DATA.TABLE.ERR=61:RETURN
10970 READ.DATA.TABLE.IH$=MID$(READ.DATA.TABLE.I$,1,2)
10980 READ.DATA.TABLE.IL$=MID$(READ.DATA.TABLE.I$,3,2)
10990 READ.DATA.TABLE.ID$=MID$(READ.DATA.TABLE.I$,8,2)
11000 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IH$))<>READ.DATA.TABLE.IH$ THEN READ.DATA.TABLE.ERR=61:RETURN
11010 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IL$))<>READ.DATA.TABLE.IL$ THEN READ.DATA.TABLE.ERR=61:RETURN
11020 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.ID$))<>READ.DATA.TABLE.ID$ THEN READ.DATA.TABLE.ERR=61:RETURN
11030 READ.DATA.TABLE.AD=VAL("&H"+READ.DATA.TABLE.IH$)*256+VAL("&H"+READ.DATA.TABLE.IL$)
11040 IF READ.DATA.TABLE.AD>READ.DATA.TABLE.N THEN READ.DATA.TABLE.ERR=61:RETURN17300 IF READ.DATA.TABLE.AD<0 THEN READ.DATA.TABLE.ERR=61:RETURN
11050 D(READ.DATA.TABLE.AD)=VAL("&H"+READ.DATA.TABLE.ID$)
11060 READ.DATA.TABLE.NC=READ.DATA.TABLE.NC+1
11070 '
11080 IF READ.DATA.TABLE.NC MOD 256=0 THEN PRINT "*";
11090 IF READ.DATA.TABLE.NC<=READ.DATA.TABLE.N THEN GOTO *READ.DATA.TABLE.0000
11100 READ.DATA.TABLE.ERR=0
11110 FOR READ.DATA.TABLE.W=0 TO READ.DATA.TABLE.N
11120 IF D(READ.DATA.TABLE.W)<0 THEN READ.DATA.TABLE.ERR=60
11130 NEXT
11140 RETURN
11150 '
11160 '
11170 *COMPORT.INIT
11180 OPEN COMPORT.NAME$ AS #1
11190 IF COMPORT.SPEED=0 THEN GOTO *COMPORT.INIT.1000
11200 OUT &H75,COMPORT.SPEED MOD 256
11210 OUT &H75,COMPORT.SPEED \ 256
11220 *COMPORT.INIT.1000
11230 G.COMPORT.ERROR=0
11240 GOSUB *RX.BUFF.INIT
11250 ON COM GOSUB *COMPORT.INT 
11260 RETURN
11270 '
11280 *COMPORT.INT
11290 *COMPORT.INT.1000
11300 IF LOC(1)=0 THEN RETURN
11310 G.RX.WRITE.DATA=ASC(INPUT$(1,1))
11320 GOSUB *RX.BUFF.WRITE
11330 IF G.COMPORT.ERROR=0 THEN G.COMPORT.ERROR=G.RX.BUFF.OV
11340 GOTO *COMPORT.INT.1000
11350 '
11360 *SEND.DATA.TO.TRX
11370 PRINT #1,CHR$(G.SEND.DATA.TO.TRX);
11380 FOR SEND.DATA.TO.TRX.W=0 TO G.SEND.DATA.TO.TRX.W:NEXT
11390 RETURN
11400 '
11410 *SEND.BLOCK
11420 IF SEND.BLOCK.N=0 THEN SEND.BLOCK.ERR=0:RETURN
11430 G.SEND.DATA.TO.TRX=D(OFFSET.ADRS):GOSUB *SEND.DATA.TO.TRX
11440 *SEND.BLOCK.0550
11450 COM STOP:GOSUB *RX.BUFF.READ:COM ON
11460 IF G.RX.BUFF.EM=-1 THEN GOTO *SEND.BLOCK.0550
11470 IF G.RX.READ.DATA<>D(OFFSET.ADRS) THEN SEND.BLOCK.ERR=80:RETURN
11480 PRINT FNADRS.D$(OFFSET.ADRS)
11490 OFFSET.ADRS=OFFSET.ADRS+1:SEND.BLOCK.N=SEND.BLOCK.N-1
11500 GOTO *SEND.BLOCK
11510 '
11520 *REC.ACK
11530 COM STOP:GOSUB *RX.BUFF.READ:COM ON
11540 IF G.RX.BUFF.EM=-1 THEN GOTO *REC.ACK
11550 IF G.RX.READ.DATA<>G.ACK THEN REC.ACK.ERR=81:RETURN
11560 REC.ACK.ERR=0:RETURN
11570 '
11580 '
11590 *STOP.INIT
11600 ON STOP GOSUB *STOP.INT:STOP ON
11610 RETURN
11620 '
11630 *STOP.INT
11640 ERROR.CODE=90:GOTO  *FINISH
11650 '
11660 '
11670 *WAIT.TYPE.COMMAND
11680 IF INKEY$<>"" THEN GOTO *WAIT.TYPE.COMMAND
11690 *WAIT.TYPE.COMMAND.1000
11700 WAIT.TYPE.COMMAND.C$=INKEY$
11710 IF WAIT.TYPE.COMMAND.C$="" THEN GOTO *WAIT.TYPE.COMMAND.1000
11720 IF INSTR(WAIT.TYPE.COMMAND.S$,WAIT.TYPE.COMMAND.C$)<>0 THEN RETURN
11730 GOTO *WAIT.TYPE.COMMAND.1000
11740 '
11750 '
11760 *FINISH
11770 IF ERROR.CODE<>0 THEN COLOR 2 ELSE COLOR 7
11780 PRINT
11790 PRINT ERROR.MES$(ERROR.CODE)
11800 CLOSE
11810 COLOR 7
11820 END
11830 '
11840 '
11850 *MAIN
11860 GOSUB *READ.HEX.CHR
11870 GOSUB *READ.ERROR.MES
11880 GOSUB *INIT.DATA.TABLE
11890 GOSUB *STOP.INIT
11900 INPUT "“ü—Íƒtƒ@ƒCƒ‹F",INFILE$:PRINT
11910 OPEN INFILE$ FOR INPUT AS #2
11920 PRINT "ƒf[ƒ^‚ð“Ç‚Ýž‚ñ‚Å‚¢‚Ü‚·B":PRINT
11930 GOSUB *READ.DATA.TABLE:PRINT:PRINT
11940 CLOSE #2
11950 IF READ.DATA.TABLE.ERR<>0 THEN ERROR.CODE=READ.DATA.TABLE.ERR:GOTO  *FINISH
11960 PRINT "ƒ`ƒFƒbƒNƒTƒ€‚ðŒŸØ‚µ‚Ü‚·B":PRINT
11970 CS=0
11980 FOR W=0 TO &H3F51:CS=(CS+D(W)) MOD 256:NEXT
11990 IF CS=D(&H3F52) THEN PRINT "ƒ`ƒFƒbƒNƒTƒ€‚Í³“–‚Å‚·B":PRINT:GOTO *MAIN.2000
12000 PRINT "ƒ`ƒFƒbƒNƒTƒ€‚ÉŒë‚è‚ª‚ ‚è‚Ü‚·B"
12010 PRINT "“ü—Íƒtƒ@ƒCƒ‹‚É‹L˜^‚³‚ê‚½ƒ`ƒFƒbƒNƒTƒ€‚Í "+HEX.CHR$(D(&H3F52))+" ‚Å‚·‚ªA³‚µ‚­‚Í "+HEX.CHR$(CS)+" ‚È‚Ì‚ÅAC³‚µ‚Ü‚µ‚½B":PRINT
12020 D(&H3F52)=CS
12030 PRINT "ƒ`ƒFƒbƒNƒTƒ€‚ðC³‚µ‚½ƒf[ƒ^‚ðƒtƒ@ƒCƒ‹‚Æ‚µ‚Ä•Û‘¶‚µ‚Ü‚·‚©H (Y/N)":PRINT
12040 WAIT.TYPE.COMMAND.S$="YNyn":GOSUB *WAIT.TYPE.COMMAND
12050 IF (WAIT.TYPE.COMMAND.C$="N") OR (WAIT.TYPE.COMMAND.C$="n") THEN GOTO *MAIN.2000
12060 INPUT "o—Íƒtƒ@ƒCƒ‹F",OUTFILE$:PRINT
12070 LINE INPUT "ƒRƒƒ“ƒgF",RMKS$:PRINT
12080 PRINT "ƒf[ƒ^ƒtƒ@ƒCƒ‹‚ðì¬‚µ‚Ü‚·B":PRINT
12090 OPEN OUTFILE$ FOR OUTPUT AS #2
12100 PRINT #2,"' "+VERSION$
12110 PRINT #2,"' "+DATE$+"  "+TIME$
12120 PRINT #2,"' "+RMKS$
12130 FOR MAIN.W=0 TO &H3F52:PRINT #2,FNADRS.D$(MAIN.W):NEXT
12140 CLOSE #2
12150 '
12160 '
12170 *MAIN.2000
12180 PRINT "ƒf[ƒ^‚Ì€”õ‚ª‚Å‚«‚Ü‚µ‚½B":PRINT
12190 PRINT "‚u‚w|‚V‚Ö‚Ì‘‚«ž‚Ý‚ðŠJŽn‚µ‚Ü‚·B"
12200 PRINT "m‚l‚n‚mn‚ð‰Ÿ‚µ‚È‚ª‚ç‚u‚w|‚V‚Ì“dŒ¹‚ð“ü‚ê‚Ä‚­‚¾‚³‚¢B"
12210 PRINT "‚u‚w|‚V‚Ì‚k‚b‚c‚Éh‚b‚k‚n‚m‚dh‚Æ•\Ž¦‚³‚ê‚½‚çAm‚u^‚ln‚ð‰Ÿ‚µ‚Ä‚­‚¾‚³‚¢B"
12220 PRINT "‚u‚w|‚V‚Ì‚k‚b‚c‚Éh‚b‚k‚n‚m‚d@‚v‚`‚h‚sh‚Æ•\Ž¦‚³‚ê‚½‚çAƒpƒ\ƒRƒ“‚ÌƒXƒy[ƒXƒo[‚ð‰Ÿ‚µ‚Ä‚­‚¾‚³‚¢B":PRINT
12230 GOSUB *COMPORT.INIT:COM ON
12240 WAIT.TYPE.COMMAND.S$=" ":GOSUB *WAIT.TYPE.COMMAND
12250 COM STOP:GOSUB *RX.BUFF.CLEAR:COM ON:OFFSET.ADRS=0
12260 '
12270 PRINT "‘æ‚PƒuƒƒbƒN‘—MŠJŽn":PRINT
12280 SEND.BLOCK.N=10:GOSUB *SEND.BLOCK:IF SEND.BLOCK.ERR<>0 THEN ERROR.CODE=SEND.BLOCK.ERR:GOTO *FINISH
12290 '
12300 PRINT "‰ž“šM†‘Ò‚¿":PRINT
12310 G.ACK=6:GOSUB *REC.ACK:IF REC.ACK.ERR<>0 THEN THEN ERROR.CODE=REC.ACK.ERR:GOTO *FINISH
12320 '
12330 PRINT "‘æ‚QƒuƒƒbƒN‘—MŠJŽn":PRINT
12340 SEND.BLOCK.N=8:GOSUB *SEND.BLOCK:IF SEND.BLOCK.ERR<>0 THEN ERROR.CODE=SEND.BLOCK.ERR:GOTO *FINISH
12350 '
12360 PRINT "‰ž“šM†‘Ò‚¿":PRINT
12370 G.ACK=6:GOSUB *REC.ACK:IF REC.ACK.ERR<>0 THEN THEN ERROR.CODE=REC.ACK.ERR:GOTO *FINISH
12380 '
12390 PRINT "‘æ‚RƒuƒƒbƒN‘—MŠJŽn":PRINT
12400 SEND.BLOCK.N=16193:GOSUB *SEND.BLOCK:IF SEND.BLOCK.ERR<>0 THEN ERROR.CODE=SEND.BLOCK.ERR:GOTO *FINISH
12410 '
12420 PRINT "‘SƒuƒƒbƒN‘—MŠ®—¹":PRINT
12430 ERROR.CODE=0:GOTO *FINISH






DUMPVX7.BAS

10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒƒ‚ƒŠ[“à—eƒ_ƒ“ƒvƒvƒƒOƒ‰ƒ€ Ver1.00 (Oct 3 2002)
10040 '
10050 'Copyright by Heian Software Engineering
10060 '(C)2002 H.S.E. Allrights reserved.
10070 '
10080 '**********************************************************
10090 '
10100 '
10110 '
10120 *START
10130 CLEAR
10140 DEFINT A-Z
10150 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10160 '
10170 D.MAX=&H3FFF
10180 '
10190 KEY 2,"SYSTEM"+CHR$(&HD)
10200 '
10210 VERSION$="DUMPVX7.BAS VER 1.00"
10220 '
10230 GOTO *MAIN
10240 '
10250 *READ.HEX.CHR
10260 DIM HEX.CHR$(255)
10270 RESTORE *READ.HEX.CHR
10280 FOR READ.HEX.CHR.W=0 TO 255:READ HEX.CHR$(READ.HEX.CHR.W):NEXT
10290 DATA 00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
10300 DATA 10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F
10310 DATA 20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F
10320 DATA 30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F
10330 DATA 40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F
10340 DATA 50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F
10350 DATA 60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F
10360 DATA 70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F
10370 DATA 80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F
10380 DATA 90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F
10390 DATA A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF
10400 DATA B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
10410 DATA C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF
10420 DATA D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF
10430 DATA E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF
10440 DATA F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF
10450 RETURN
10460 '
10470 '
10480 *READ.ERROR.MES
10490 DIM ERROR.MES$(100)
10500 RESTORE *READ.ERROR.MES
10510 *READ.ERROR.MES.1000
10520 READ ERROR.MES.W
10530 IF ERROR.MES.W<0 THEN RETURN
10540 READ ERROR.MES$(ERROR.MES.W)
10550 GOTO *READ.ERROR.MES.1000
10560 DATA 0,"--- ³íI—¹(000) ---"
10570 DATA 60,"*** “ü—Íƒf[ƒ^‚ª•s‘«‚µ‚Ä‚¢‚Ü‚·B(060) ***"
10580 DATA 61,"*** “ü—Íƒf[ƒ^\‘¢‚ÉŒë‚è‚ª‚ ‚è‚Ü‚·B(061) ***"
10590 DATA -1,""
10600 '
10610 '
10620 *READ.TAG.CHR
10630 DIM TAG.CHR$(255,1)
10640 RESTORE *READ.TAG.CHR
10650 FOR READ.TAG.CHR.W=0 TO 255:READ TAG.CHR$(READ.TAG.CHR.W,0):NEXT
10660 DATA "‚O","‚P","‚Q","‚R","‚S","‚T","‚U","‚V","‚W","‚X","@","‚`","‚a","‚b","‚c","‚d":'0
10670 DATA "‚e","‚f","‚g","‚h","‚i","‚j","‚k","‚l","‚m","‚n","‚o","‚p","‚q","‚r","‚s","‚t":'1
10680 DATA "‚u","‚v","‚w","‚x","‚y","‚","‚‚","‚ƒ","‚„","‚…","‚†","‚‡","‚ˆ","‚‰","‚Š","‚‹":'2
10690 DATA "‚Œ","‚","‚Ž","‚","‚","‚‘","‚’","‚“","‚”","‚•","‚–","‚—","‚˜","‚™","‚š","D":'3
10700 DATA "C","F","G","I","h","”","","“","•","f","i","j","–","{","|","E":'4
10710 DATA "","ƒ","„","H","—","m","","n","O","Q","_","o","b","p","¨","©":'5
10720 DATA "£","¥","`","š","€","~","ã","ƒÉ","ƒÊ","ƒÎ","ƒÓ","ƒÖ","ƒ¶","Ž","™","’":'6
10730 DATA "}","ç","ô","œ","ó","›","u","v","E","‰","Š","§","‚ ","‚¢","‚¤","‚¦":'7
10740 DATA "‚¨","‚©","‚«","‚­","‚¯","‚±","‚³","‚µ","‚·","‚¹","‚»","‚½","‚¿","‚Â","‚Ä","‚Æ":'8
10750 DATA "‚È","‚É","‚Ê","‚Ë","‚Ì","‚Í","‚Ð","‚Ó","‚Ö","‚Ù","‚Ü","‚Ý","‚Þ","‚ß","‚à","‚â":'9
10760 DATA "‚ä","‚æ","‚ç","‚è","‚é","‚ê","‚ë","‚í","‚ð","‚ñ","@","@","‚ª","‚¬","‚®","‚°":'A
10770 DATA "‚²","‚´","‚¶","‚¸","‚º","‚¼","‚¾","‚À","‚Ã","‚Å","‚Ç","‚Î","‚Ñ","‚Ô","‚×","‚Ú":'B
10780 DATA "‚Ï","‚Ò","‚Õ","‚Ø","‚Û","‚Ÿ","‚¡","‚£","‚¥","‚§","‚á","‚ã","‚å","‚Á","ƒA","ƒC":'C
10790 DATA "ƒE","ƒG","ƒI","ƒJ","ƒL","ƒN","ƒP","ƒR","ƒT","ƒV","ƒX","ƒZ","ƒ\","ƒ^","ƒ`","ƒc":'D
10800 DATA "ƒe","ƒg","ƒi","ƒj","ƒk","ƒl","ƒm","ƒn","ƒq","ƒt","ƒw","ƒz","ƒ}","ƒ~","ƒ€","ƒ":'E
10810 DATA "ƒ‚","ƒ„","ƒ†","ƒˆ","ƒ‰","ƒŠ","ƒ‹","ƒŒ","ƒ","ƒ","ƒ’","ƒ“","ƒK","ƒM","ƒO","ƒQ":'F
10820 FOR READ.TAG.CHR.W=0 TO 255:READ TAG.CHR$(READ.TAG.CHR.W,1):NEXT
10830 DATA "ƒS","ƒU","ƒW","ƒY","ƒ[","ƒ]","ƒ_","ƒa","ƒd","ƒf","ƒh","ƒo","ƒr","ƒu","ƒx","ƒ{":'0
10840 DATA "ƒp","ƒs","ƒv","ƒy","ƒ|","ƒ@","ƒB","ƒD","ƒF","ƒH","ƒƒ","ƒ…","ƒ‡","ƒb","ˆ¤","ˆ³":'1
10850 DATA "ˆÉ","ˆÊ","ˆä","ˆç","ˆê","ˆï","‰p","‰q","‰z","‰~","‰“","‰¡","‰ª","‰«","‰®","‰·":'2
10860 DATA "‰¹","‰»","‰Ì","‰Í","‰Î","","Ž­","‰ê","ŠC","Š`","Šu","Šw","Šƒ","ŠÔ","ŠÖ","›":'3
10870 DATA "Šâ","Šî","‹@","‹C","é","Šò","‹}","‹~","‹ã","‹ž","‹³","‹´","‹Ê","‹Ö","‹à","‹æ":'4
10880 DATA "‹ó","ŒF","ŒI","ŒQ","ŒS","Œ`","Œx","ŒŽ","Œ§","Œ´","Œ¾","ŒÀ","ŒÉ","ž","ŒÃ","ŒÜ":'5
10890 DATA "Œê","Œû","L","q","‚","‡","","‘","•","ª","²","Ð","é","¼","â","è":'6
10900 DATA "Ž@","ŽD","‘ò","àV","ŽO","ŽR","Žl","Žm","Žs","Ž~","Ž†","Ž ","Ž™","Žž","Ž¦","Ž©":'7
10910 DATA "Žµ","Žæ","Žè","Žê","Žð","B","H","W","\","d","‘","¬","Á","ã","V","X":'8
10920 DATA "_","…","§","Â","Ã","Î","Ý","å","ç","ì","ü","‘D","‘Š","‘","‘—","‘©":'9
10930 DATA "‘ª","‘±","‘º","‘à","‘ä","‘å","‘æ","‘ê","’P","’m","’†","’¡","’©","’¬","’®","’·":'A
10940 DATA "’¹","’è","“S","“V","“c","“d","ŒË","“s","“x","“y","“‡","“Œ","“","“¡","“¹","“¿":'B
10950 DATA "“Á","“Ç","“È","“Þ","“ê","“ñ","“ú","À","”Z","”\","”n","”„","”•","”ª","ã","”Ñ":'C
10960 DATA "”ö","•Q","•S","•\","•b","•l","•x","•{","•Œ","•","•”","•","•Ÿ","•ª","•¶","•·":'D
10970 DATA "•º","•À","•ú","–F","–h","–k","–y","–{","–ˆ","–œ","‹{","–³","–¼","–Ø","’J","–ì":'E
10980 DATA "—t","—z","—","—œ","—Ç","—Ñ","—é","˜A","˜H","˜Z","˜a","¬","¬","¬","¬","¬":'F
10990 RETURN
11000 '
11010 *READ.PWR.CHR
11020 DIM PWR.CHR$(3)
11030 RESTORE *READ.PWR.CHR
11040 FOR READ.PWR.CHR.W=0 TO 3:READ PWR.CHR$(READ.PWR.CHR.W):NEXT
11050 DATA "L1","L2","L3","HI"
11060 RETURN
11070 '
11080 *READ.SIMP.CHR
11090 DIM SIMP.CHR$(3)
11100 RESTORE *READ.SIMP.CHR
11110 FOR READ.SIMP.CHR.W=0 TO 3:READ SIMP.CHR$(READ.SIMP.CHR.W):NEXT
11120 DATA "SIMP","-DUP","+DUP","TXRX"
11130 RETURN
11140 '
11150 *READ.STEP.CHR
11160 DIM STEP.CHR$(7)
11170 RESTORE *READ.STEP.CHR
11180 FOR READ.STEP.CHR.W=0 TO 7:READ STEP.CHR$(READ.STEP.CHR.W):NEXT
11190 DATA "5","10","12.5","15","20","25","50","100"
11200 RETURN
11210 '
11220 *READ.SQL.CHR
11230 DIM SQL.CHR$(7)
11240 RESTORE *READ.SQL.CHR
11250 FOR READ.SQL.CHR.W=0 TO 7:READ SQL.CHR$(READ.SQL.CHR.W):NEXT
11260 DATA "NONE","TONE","TSQL","DCS","???","???","???","???"
11270 RETURN
11280 '
11290 *READ.MODE.CHR
11300 DIM MODE.CHR$(3)
11310 RESTORE *READ.MODE.CHR
11320 FOR READ.MODE.CHR.W=0 TO 3:READ MODE.CHR$(READ.MODE.CHR.W):NEXT
11330 DATA "N-FM","AM","W-FM","???"
11340 RETURN
11350 '
11360 *READ.TSQ.CHR
11370 DIM TSQ.CHR$(255)
11380 FOR READ.TSQ.CHR.W=0 TO 255:TSQ.CHR$(READ.TSQ.CHR.W)="???":NEXT
11390 RESTORE *READ.TSQ.CHR
11400 FOR READ.TSQ.CHR.W=0 TO 49:READ TSQ.CHR$(READ.TSQ.CHR.W):NEXT
11410 DATA 67.0,69.3,71.9,74.4,77.0,79.7,82.5,85.4,88.5,91.5
11420 DATA 94.8,97.4,100.0,103.5,107.2,110.9,114.8,118.8,123.0,127.3
11430 DATA 131.8,136.5,141.3,146.2,151.4,156.7,159.8,162.2,165.5,167.9
11440 DATA 171.3,173.8,177.3,179.9,183.5,186.2,189.9,192.8,196.6,199.5
11450 DATA 203.5,206.5,210.7,218.1,225.7,229.1,233.6,241.8,250.3,254.1
11460 RETURN
11470 '
11480 *READ.DCS.CHR
11490 DIM DCS.CHR$(255)
11500 FOR READ.DCS.CHR.W=0 TO 255:DCS.CHR$(READ.DCS.CHR.W)="???":NEXT
11510 RESTORE *READ.DCS.CHR
11520 FOR READ.DCS.CHR.W=0 TO 103:READ DCS.CHR$(READ.DCS.CHR.W):NEXT
11530 DATA 023,025,026,031,032,036,043,047,051,053
11540 DATA 054,065,071,072,073,074,114,115,116,122
11550 DATA 125,131,132,134,143,145,152,155,156,162
11560 DATA 165,172,174,205,212,223,225,226,243,244
11570 DATA 245,246,251,252,255,261,263,265,266,271
11580 DATA 274,306,311,315,325,331,332,343,346,351
11590 DATA 356,364,365,371,411,412,413,423,431,432
11600 DATA 445,446,452,454,455,462,464,465,466,503
11610 DATA 506,516,523,526,532,546,565,606,612,624
11620 DATA 627,631,632,654,662,664,703,712,723,731
11630 DATA 732,734,743,754
11640 RETURN
11650 '
11660 *READ.CH.CHR
11670 DIM CH.CHR$(512)
11680 FOR READ.CH.CHR.W=1 TO 450
11690 CH.CHR$(READ.CH.CHR.W)="M"+RIGHT$("00"+RIGHT$(STR$(READ.CH.CHR.W),LEN(STR$(READ.CH.CHR.W))-1),3)
11700 NEXT
11710 RESTORE *READ.CH.CHR
11720 FOR READ.CH.CHR.W=451 TO 511:READ CH.CHR$(READ.CH.CHR.W):NEXT
11730 DATA "OTM1","OTM2","OTM3","OTM4","OTM5","OTM6","OTM7","OTM8","OTM9","OTM0"
11740 DATA "PMS_L01","PMS_U01","PMS_L02","PMS_U02","PMS_L03","PMS_U03","PMS_L04","PMS_U04"
11750 DATA "PMS_L05","PMS_U05","PMS_L06","PMS_U06","PMS_L07","PMS_U07","PMS_L08","PMS_U08"
11760 DATA "PMS_L09","PMS_U09","PMS_L10","PMS_U10","PMS_L11","PMS_U11","PMS_L12","PMS_U12"
11770 DATA "PMS_L13","PMS_U13","PMS_L14","PMS_U14","PMS_L15","PMS_U15","PMS_L16","PMS_U16"
11780 DATA "PMS_L17","PMS_U17","PMS_L18","PMS_U18","PMS_L19","PMS_U19","PMS_L20","PMS_U20"
11790 DATA "HM_BC","HM_HF","HM_FM","HM_TV","HM_050","HM_144","HM_220","HM_430","HM_AIR","HM_ACT1","HM_ACT2"
11800 RETURN
11810 '
11820 *INIT.DATA.TABLE
11830 DIM D(D.MAX)
11840 FOR INIT.DATA.TABLE.W=0 TO D.MAX:D(INIT.DATA.TABLE.W)=-1:NEXT
11850 RETURN
11860 '
11870 *READ.DATA.TABLE
11880 READ.DATA.TABLE.N=&H3F52
11890 READ.DATA.TABLE.NC=0
11900 *READ.DATA.TABLE.0000
11910 IF EOF(1) THEN READ.DATA.TABLE.ERR=60:RETURN
11920 LINE INPUT #1,READ.DATA.TABLE.I$
11930 IF READ.DATA.TABLE.I$="" THEN GOTO *READ.DATA.TABLE.0000
11940 IF LEFT$(READ.DATA.TABLE.I$,1)="'" THEN GOTO *READ.DATA.TABLE.0000
11950 IF LEN(READ.DATA.TABLE.I$)<>9 THEN READ.DATA.TABLE.ERR=61:RETURN
11960 READ.DATA.TABLE.IH$=MID$(READ.DATA.TABLE.I$,1,2)
11970 READ.DATA.TABLE.IL$=MID$(READ.DATA.TABLE.I$,3,2)
11980 READ.DATA.TABLE.ID$=MID$(READ.DATA.TABLE.I$,8,2)
11990 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IH$))<>READ.DATA.TABLE.IH$ THEN READ.DATA.TABLE.ERR=61:RETURN
12000 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IL$))<>READ.DATA.TABLE.IL$ THEN READ.DATA.TABLE.ERR=61:RETURN
12010 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.ID$))<>READ.DATA.TABLE.ID$ THEN READ.DATA.TABLE.ERR=61:RETURN
12020 READ.DATA.TABLE.AD=VAL("&H"+READ.DATA.TABLE.IH$)*256+VAL("&H"+READ.DATA.TABLE.IL$)
12030 IF READ.DATA.TABLE.AD>READ.DATA.TABLE.N THEN READ.DATA.TABLE.ERR=61:RETURN17300 IF READ.DATA.TABLE.AD<0 THEN READ.DATA.TABLE.ERR=61:RETURN
12040 D(READ.DATA.TABLE.AD)=VAL("&H"+READ.DATA.TABLE.ID$)
12050 READ.DATA.TABLE.NC=READ.DATA.TABLE.NC+1
12060 '
12070 IF READ.DATA.TABLE.NC MOD 256=0 THEN PRINT "*";
12080 IF READ.DATA.TABLE.NC<=READ.DATA.TABLE.N THEN GOTO *READ.DATA.TABLE.0000
12090 READ.DATA.TABLE.ERR=0
12100 FOR READ.DATA.TABLE.W=0 TO READ.DATA.TABLE.N
12110 IF D(READ.DATA.TABLE.W)<0 THEN READ.DATA.TABLE.ERR=60
12120 NEXT
12130 RETURN
12140 '
12150 *GET.MEM.DATA
12160 PWR.CHR.X$=PWR.CHR$((D(MEM.OFFSET+1)\64) AND 3)
12170 SIMP.CHR.X$=SIMP.CHR$((D(MEM.OFFSET+1)\16) AND 3)
12180 STEP.CHR.X$=STEP.CHR$((D(MEM.OFFSET+1)\1) AND 7)
12190 MODE.CHR.X$=MODE.CHR$((D(MEM.OFFSET+5)\1) AND 3)
12200 SQL.CHR.X$=SQL.CHR$((D(MEM.OFFSET+20)\1) AND 7)
12210 TSQ.CHR.X$=TSQ.CHR$((D(MEM.OFFSET+18)\1) AND 255)
12220 DCS.CHR.X$=DCS.CHR$((D(MEM.OFFSET+19)\1) AND 255)
12230 TAG.CHR.X$=""
12240 FOR GET.MEM.DATA=0 TO 7
12250 TAG.CHR.X$=TAG.CHR.X$+TAG.CHR$(D(MEM.OFFSET+6+GET.MEM.DATA),D(MEM.OFFSET+21)\(2^GET.MEM.DATA) MOD 2)
12260 NEXT
12270 GET.MEM.DATA.SUB.O=MEM.OFFSET+2:GOSUB *GET.MEM.DATA.SUB:FREQ0.CHR.X$=GET.MEM.DATA.SUB.F$
12280  GET.MEM.DATA.SUB.O=MEM.OFFSET+15:GOSUB *GET.MEM.DATA.SUB:FREQ1.CHR.X$=GET.MEM.DATA.SUB.F$
12290 DATA.CHR.X$=""
12300 FOR GET.MEM.DATA.W=0 TO 21
12310 DATA.CHR.X$=DATA.CHR.X$+HEX.CHR$(D(MEM.OFFSET+GET.MEM.DATA.W))+" "
12320 NEXT
12330 RETURN
12340 '
12350 *GET.MEM.DATA.SUB
12360 GET.MEM.DATA.SUB.F2$=HEX.CHR$(D(GET.MEM.DATA.SUB.O))
12370 GET.MEM.DATA.SUB.F1$=HEX.CHR$(D(GET.MEM.DATA.SUB.O+1))
12380 GET.MEM.DATA.SUB.F0$=HEX.CHR$(D(GET.MEM.DATA.SUB.O+2))
12390 IF GET.MEM.DATA.SUB.05<>0 THEN F0$=F0$+"5"
12400 GET.MEM.DATA.SUB.F$=GET.MEM.DATA.SUB.F2$+LEFT$(GET.MEM.DATA.SUB.F1$,1)+"."+RIGHT$(GET.MEM.DATA.SUB.F1$,1)+GET.MEM.DATA.SUB.F0$
12410 IF LEFT$(GET.MEM.DATA.SUB.F$,1)="0" THEN GET.MEM.DATA.SUB.F$=MID$(GET.MEM.DATA.SUB.F$,2,7)
12420 IF LEFT$(GET.MEM.DATA.SUB.F$,1)="0" THEN GET.MEM.DATA.SUB.F$=MID$(GET.MEM.DATA.SUB.F$,2,6)
12430 RETURN
12440 '
12450 *OUT.STR
12460 PRINT OUT.STR$
12470 PRINT #2,OUT.STR$
12480 RETURN
12490 '
12500 *FINISH
12510 PRINT
12520 PRINT ERROR.MES$(ERROR.CODE)
12530 CLOSE
12540 END
12550 '
12560 *MAIN
12570 GOSUB *READ.HEX.CHR
12580 GOSUB *READ.ERROR.MES
12590 GOSUB *INIT.DATA.TABLE
12600 GOSUB *READ.TAG.CHR
12610 GOSUB *READ.PWR.CHR
12620 GOSUB *READ.SIMP.CHR
12630 GOSUB *READ.STEP.CHR
12640 GOSUB *READ.SQL.CHR
12650 GOSUB *READ.MODE.CHR
12660 GOSUB *READ.TSQ.CHR
12670 GOSUB *READ.DCS.CHR
12680 GOSUB *READ.CH.CHR
12690 INPUT "“ü—Íƒtƒ@ƒCƒ‹F",INFILE$
12700 INPUT "o—Íƒtƒ@ƒCƒ‹F",OUTFILE$
12710 OPEN INFILE$ FOR INPUT AS #1
12720 GOSUB *READ.DATA.TABLE:PRINT
12730 IF READ.DATA.TABLE.ERR<>0 THEN ERROR.CODE=READ.DATA.TABLE.ERR:GOTO *FINISH
12740 OPEN OUTFILE$ FOR OUTPUT AS #2
12750 K$="ƒƒ‚ƒŠ,Žü”g”(MHz),o—Í,SIMP/DUP,ƒXƒeƒbƒv(KHz),ƒ‚[ƒh,Žü”g”f(MHz),ƒXƒPƒ‹ƒ`,ƒg[ƒ“(Hz),‚c‚b‚r,ƒƒ‚ƒŠƒ^ƒO,”õl"
12760 OUT.STR$=K$:GOSUB *OUT.STR
12770 FOR MX=1 TO 500
12780 MEM.OFFSET=&H1322-22+MX*22
12790 GOSUB *GET.MEM.DATA
12800 TA=&H1202+(MX-1)\2
12810 IF (MX-1) MOD 2=0 THEN TAF=D(TA) AND 15 ELSE TAF=(D(TA)\16) AND 15
12820 IF (TAF AND 1)<>1 THEN GOTO *MAIN8000 
12830 K$=CH.CHR$(MX)+","+FREQ0.CHR.X$+","+PWR.CHR.X$+","+SIMP.CHR.X$+","+STEP.CHR.X$+","+MODE.CHR.X$+","
12840 K$=K$+FREQ1.CHR.X$+","+SQL.CHR.X$+","+TSQ.CHR.X$+","+DCS.CHR.X$+","+TAG.CHR.X$+","+DATA.CHR.X$
12850 OUT.STR$=K$:GOSUB *OUT.STR
12860 *MAIN8000
12870 NEXT
12880 ERROR.CODE=0:GOTO *FINISH






SAVEVX7C.BAS


10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒNƒ[ƒ“ƒf[ƒ^“Ç‚Ýo‚µƒvƒƒOƒ‰ƒ€ Ver3.00 (Sep 29 2002)
10040 '
10050 'Copyright by Heian Software Engineering
10060 '(C)2002 H.S.E. Allrights reserved.
10070 '
10080 '**********************************************************
10090 '
10100 *START
10110 CLEAR
10120 DEFINT A-Z
10130 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10140 '
10150 KEY 2,"system"+CHR$(&HD)
10160 '
10170 COMPORT.NAME$="COM1:N81NN":'’ÊMƒ|[ƒgƒtƒ@ƒCƒ‹ƒfƒBƒXƒNƒŠƒvƒ^
10180 COMPORT.SPEED=8:'’ÊM‘¬“x 8:19200,0:SPEEDƒRƒ}ƒ“ƒh‚É‚æ‚é
10190 '
10200 RXD.MAX=&H3FFF
10210 ACK=&H6
10220 '
10230 VERSION$="SAVEVX7A.BAS VER 3.00"
10240 GOTO *MAIN
10250 '
10260 'HEX.CHR$
10270 *READ.HEX.CHR
10280 DIM HEX.CHR$(255)
10290 RESTORE *READ.HEX.CHR
10300 FOR READ.HEX.CHR.W=0 TO 255:READ HEX.CHR$(READ.HEX.CHR.W):NEXT
10310 DATA 00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
10320 DATA 10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F
10330 DATA 20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F
10340 DATA 30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F
10350 DATA 40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F
10360 DATA 50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F
10370 DATA 60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F
10380 DATA 70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F
10390 DATA 80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F
10400 DATA 90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F
10410 DATA A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF
10420 DATA B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
10430 DATA C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF
10440 DATA D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF
10450 DATA E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF
10460 DATA F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF
10470 RETURN
10480 '
10490 *READ.ERROR.MES
10500 DIM ERROR.MES$(100)
10510 RESTORE *READ.ERROR.MES
10520 *READ.ERROR.MES.1000
10530 READ ERROR.MES.W
10540 IF ERROR.MES.W<0 THEN RETURN
10550 READ ERROR.MES$(ERROR.MES.W)
10560 GOTO *READ.ERROR.MES.1000
10570 DATA 0,"--- ³íI—¹(000) ---"
10580 DATA 1,"*** ŽóMƒf[ƒ^‚ª‘½‚·‚¬‚Ü‚·B(001) ***"
10590 DATA 2,"*** ƒuƒƒbƒNŽóM‚ÉŽ¸”s‚µ‚Ü‚µ‚½B(002) ***"
10600 DATA 3,"*** ‹­§’†’f(003) ***"
10610 DATA 4,"*** ƒ`ƒFƒbƒNƒTƒ€‚ªˆê’v‚µ‚Ü‚¹‚ñB(004) ***"
10620 DATA 5,"*** ƒuƒƒbƒNŽóM‚ÉŽ¸”s‚µ‚Ü‚µ‚½B(005) ***"
10630 DATA -1,""
10640 '
10650 '
10660 *COMPORT.INIT
10670 OPEN COMPORT.NAME$ AS #1
10680 IF COMPORT.SPEED=0 THEN GOTO *COMPORT.INIT.1000
10690 OUT &H75,COMPORT.SPEED MOD 256
10700 OUT &H75,COMPORT.SPEED \ 256
10710 *COMPORT.INIT.1000
10720 RXD.NX=0
10730 RXD.IHBT=0
10740 DIM RXD(RXD.MAX)
10750 ON COM GOSUB *COMPORT.INT 
10760 RETURN
10770 '
10780 *COMPORT.INT
10790 *COMPORT.INT.1000
10800 IF LOC(1)=0 THEN ERROR.CX=0:RETURN
10810 IF RXD.NX>&H3F52 THEN ERROR.CX=1:RETURN
10820 COMPORT.INT.W=ASC(INPUT$(1,1))
10830 IF RXD.IHBT<>0 THEN IF COMPORT.INT.W=ACK THEN RXD.IHBT=0:ERROR.CX=0:RETURN ELSE RXD.IHBT=0:ERROR.CX=5:RETURN
10840 RXD(RXD.NX)=COMPORT.INT.W
10850 RXD.NX=RXD.NX+1
10860 GOTO *COMPORT.INT
10870 '
10880 '
10890 *STOP.INT
10900 ERROR.C=3
10910 *FINISH
10920 IF ERROR.C<>0 THEN COLOR 2:BEEP
10930 PRINT
10940 PRINT ERROR.MES$(ERROR.C):PRINT
10950 COM OFF
10960 CLOSE
10970 COLOR 7
10980 END
10990 '
11000 '
11010 *MAIN
11020 ON STOP GOSUB *STOP.INT
11030 STOP ON
11040 GOSUB *READ.ERROR.MES
11050 GOSUB *READ.HEX.CHR
11060 INPUT "o—ÍiƒƒOjƒtƒ@ƒCƒ‹–¼F",OUT.FILE.NAME$
11070 LINE INPUT "ƒRƒƒ“ƒgF",RMKS$
11080 PRINT
11090 PRINT "m‚l‚n‚mn‚ð‰Ÿ‚µ‚È‚ª‚ç‚u‚w|‚V‚Ì“dŒ¹‚ð“ü‚ê‚Ä‚­‚¾‚³‚¢B":PRINT
11100 PRINT "‚u‚w|‚V‚Ì‚k‚b‚c‚Éh‚b‚k‚n‚m‚dh‚Æ•\Ž¦‚³‚ê‚½‚çAƒpƒ\ƒRƒ“‚ÌƒXƒy[ƒXƒo[‚ð‰Ÿ‚µ‚Ä‚­‚¾‚³‚¢B":PRINT
11110 *MAIN.0100
11120 IF INKEY$<>"" THEN GOTO *MAIN.0100
11130 *MAIN.0150
11140 IF INKEY$<>" " THEN GOTO *MAIN.0150
11150 GOSUB *COMPORT.INIT
11160 COM ON
11170 PRINT "‚u‚w|‚V‚Ìm‚a‚`‚m‚cnƒL[‚ð‰Ÿ‚µ‚Ä‚­‚¾‚³‚¢B":PRINT
11180 '
11190 *MAIN.1000
11200 PRINT.N=0
11210 PRINT:PRINT "‘æ‚PƒuƒƒbƒNŽóM":PRINT
11220 *MAIN.1010
11230 IF ERROR.CX<>0 THEN ERROR.C=ERROR.CX:GOTO *FINISH
11240 RXD.N=RXD.NX
11250 IF PRINT.N<RXD.N THEN PRINT HEX.CHR$(RXD.N \ 256)+HEX.CHR$(RXD.N MOD 256):PRINT.N=RXD.N
11260 IF RXD.N<&HA THEN GOTO *MAIN.1010
11270 IF RXD.N>&HA THEN ERROR.C=2:GOTO *FINISH
11280 RXD.IHBT=-1:PRINT #1,CHR$(ACK);
11290 '
11300 *MAIN.2000
11310 PRINT:PRINT "‘æ‚QƒuƒƒbƒNŽóM":PRINT
11320 *MAIN.2010
11330 IF ERROR.CX<>0 THEN ERROR.C=ERROR.CX:GOTO *FINISH
11340 RXD.N=RXD.NX
11350 IF PRINT.N<RXD.N THEN PRINT HEX.CHR$(RXD.N \ 256)+HEX.CHR$(RXD.N MOD 256):PRINT.N=RXD.N
11360 IF RXD.N<&H12 THEN GOTO *MAIN.2010
11370 IF RXD.N>&H12 THEN ERROR.C=2:GOTO *FINISH
11380 RXD.IHBT=-1:PRINT #1,CHR$(ACK);
11390 '
11400 *MAIN.3000
11410 PRINT:PRINT "‘æ‚RƒuƒƒbƒNŽóM":PRINT
11420 *MAIN.3010
11430 IF ERROR.CX<>0 THEN ERROR.C=ERROR.CX:GOTO *FINISH
11440 RXD.N=RXD.NX
11450 IF PRINT.N<RXD.N THEN PRINT HEX.CHR$(RXD.N \ 256)+HEX.CHR$(RXD.N MOD 256):PRINT.N=RXD.N
11460 IF RXD.N<&H3F52 THEN GOTO *MAIN.3010
11470 IF RXD.N>&H3F52 THEN ERROR.C=2:GOTO *FINISH
11480 '
11490 *MAIN.4000
11500 PRINT:PRINT "ƒ`ƒFƒbƒNƒTƒ€‚ðŒŸØ‚µ‚Ä‚¢‚Ü‚·B":PRINT
11510 MAIN.W.SUM=0:MAIN.W=0
11520 FOR MAIN.W=0 TO &H3F51
11530 MAIN.W.SUM=(MAIN.W.SUM+RXD(MAIN.W)) MOD 256
11540 IF MAIN.W MOD 100=0 THEN PRINT "*";
11550 NEXT
11560 PRINT
11570 IF RXD(&H3F52)<>MAIN.W.SUM THEN ERROR.C=4:GOTO *FINISH
11580 IF ERROR.CX<>0 THEN ERROR.C=ERROR.CX:GOTO *FINISH
11590 PRINT:PRINT "ƒ`ƒFƒbƒNƒTƒ€‚ªˆê’v‚µ‚Ü‚µ‚½B":PRINT
11600 '
11610 COM OFF
11620 CLOSE 1
11630 '
11640 *MAIN.5000
11650 OPEN OUT.FILE.NAME$ FOR OUTPUT AS #1
11660 PRINT "ƒf[ƒ^ƒtƒ@ƒCƒ‹‚ðì¬‚µ‚Ü‚·B":PRINT
11670 PRINT #1,"' "+VERSION$
11680 PRINT #1,"' "+DATE$+"  "+TIME$
11690 PRINT #1,"' "+RMKS$
11700 FOR MAIN.W=0 TO &H3F52
11710 PRINT #1,HEX.CHR$(MAIN.W \ 256)+HEX.CHR$(MAIN.W MOD 256)+" : "+HEX.CHR$(RXD(MAIN.W))
11720 NEXT
11730 ERROR.C=0:GOTO *FINISH



LOADVX7.BAS

10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒNƒ[ƒ“ƒf[ƒ^‘‚«ž‚ÝƒvƒƒOƒ‰ƒ€ Ver1.00 (Sep 22 2002)
10040 '
10050 'Copyright by Heian Software Engineering
10060 '(C)2002 H.S.E. Allrights reserved.
10070 '
10080 '**********************************************************
10090 '
10100 '
10110 '
10120 *START
10130 CLEAR
10140 DEFINT A-Z
10150 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10160 '
10170 RX.BUFF.SIZE=32000:'ŽóMƒoƒbƒtƒ@ƒTƒCƒY
10180 TX.BUFF.SIZE=32000:'‘—Mƒoƒbƒtƒ@ƒTƒCƒY
10190 '
10200 COMPORT.NAME$="COM1:N81NN":'’ÊMƒ|[ƒgƒtƒ@ƒCƒ‹ƒfƒBƒXƒNƒŠƒvƒ^
10210 COMPORT.SPEED=8:'’ÊM‘¬“x 8:19200,0:SPEEDƒRƒ}ƒ“ƒh‚É‚æ‚é
10220 G.SEND.DATA.TO.TRX.W=1000:'‘—MŽžŠÔ’²®
10230 '
10240 GOTO *MAIN
10250 '
10260 'HEX.CHR$
10270 *READ.HEX.CHR
10280 DIM HEX.CHR$(255)
10290 RESTORE *READ.HEX.CHR
10300 FOR READ.HEX.CHR.W=0 TO 255:READ HEX.CHR$(READ.HEX.CHR.W):NEXT
10310 DATA 00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
10320 DATA 10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F
10330 DATA 20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F
10340 DATA 30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F
10350 DATA 40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F
10360 DATA 50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F
10370 DATA 60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F
10380 DATA 70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F
10390 DATA 80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F
10400 DATA 90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F
10410 DATA A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF
10420 DATA B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
10430 DATA C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF
10440 DATA D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF
10450 DATA E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF
10460 DATA F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF
10470 RETURN
10480 '
10490 *RX.BUFF.INIT
10500 DIM RX.BUFF(RX.BUFF.SIZE-1)
10510 GOSUB *RX.BUFF.CLEAR
10520 RETURN
10530 '
10540 *RX.BUFF.CLEAR
10550 G.RX.BUFF.RP=0:'“Ç‚Ýo‚µƒ|ƒCƒ“ƒ^
10560 G.RX.BUFF.WP=0:'‘‚«ž‚Ýƒ|ƒCƒ“ƒ^
10570 G.RX.BUFF.N=0 :'ƒoƒbƒtƒ@“àƒf[ƒ^”
10580 G.RX.BUFF.OV=0:'ƒoƒbƒtƒ@ƒI[ƒo[ƒtƒ[
10590 G.RX.BUFF.EM=0:'ƒoƒbƒtƒ@“àƒGƒ“ƒvƒeƒB
10600 RETURN
10610 '
10620 *RX.BUFF.WRITE
10630 IF G.RX.BUFF.N>=RX.BUFF.SIZE THEN G.RX.BUFF.OV=-1:RETURN
10640 RX.BUFF(G.RX.BUFF.WP)=G.RX.WRITE.DATA
10650 G.RX.BUFF.WP=(G.RX.BUFF.WP+1) MOD RX.BUFF.SIZE
10660 G.RX.BUFF.N=G.RX.BUFF.N+1
10670 G.RX.BUFF.OV=0
10680 RETURN
10690 '
10700 *RX.BUFF.READ
10710 IF G.RX.BUFF.N=0 THEN G.RX.BUFF.EM=-1:RETURN
10720 G.RX.READ.DATA=RX.BUFF(G.RX.BUFF.RP)
10730 G.RX.BUFF.RP=(G.RX.BUFF.RP+1) MOD RX.BUFF.SIZE
10740 G.RX.BUFF.N=G.RX.BUFF.N-1
10750 G.RX.BUFF.EM=0
10760 RETURN
10770 '
10780 '
10790 *TX.BUFF.INIT
10800 DIM TX.BUFF(TX.BUFF.SIZE-1)
10810 GOSUB *TX.BUFF.CLEAR
10820 RETURN
10830 '
10840 *TX.BUFF.CLEAR
10850 G.TX.BUFF.RP=0:'“Ç‚Ýo‚µƒ|ƒCƒ“ƒ^
10860 G.TX.BUFF.WP=0:'‘‚«ž‚Ýƒ|ƒCƒ“ƒ^
10870 G.TX.BUFF.N=0 :'ƒoƒbƒtƒ@“àƒf[ƒ^”
10880 G.TX.BUFF.OV=0:'ƒoƒbƒtƒ@ƒI[ƒo[ƒtƒ[
10890 G.TX.BUFF.EM=0:'ƒoƒbƒtƒ@“àƒGƒ“ƒvƒeƒB
10900 RETURN
10910 '
10920 *TX.BUFF.WRITE
10930 IF G.TX.BUFF.N>=TX.BUFF.SIZE THEN G.TX.BUFF.OV=-1:RETURN
10940 TX.BUFF(G.TX.BUFF.WP)=G.TX.WRITE.DATA
10950 G.TX.BUFF.WP=(G.TX.BUFF.WP+1) MOD TX.BUFF.SIZE
10960 G.TX.BUFF.N=G.TX.BUFF.N+1
10970 G.TX.BUFF.OV=0
10980 RETURN
10990 '
11000 *TX.BUFF.READ
11010 IF G.TX.BUFF.N=0 THEN G.TX.BUFF.EM=-1:RETURN
11020 G.TX.READ.DATA=TX.BUFF(G.TX.BUFF.RP)
11030 G.TX.BUFF.RP=(G.TX.BUFF.RP+1) MOD TX.BUFF.SIZE
11040 G.TX.BUFF.N=G.TX.BUFF.N-1
11050 G.TX.BUFF.EM=0
11060 RETURN
11070 '
11080 '
11090 *COMPORT.INIT
11100 OPEN COMPORT.NAME$ AS #1
11110 IF COMPORT.SPEED=0 THEN GOTO *COMPORT.INIT.1000
11120 OUT &H75,COMPORT.SPEED MOD 256
11130 OUT &H75,COMPORT.SPEED \ 256
11140 *COMPORT.INIT.1000
11150 G.COMPORT.ERROR=0
11160 ON COM GOSUB *COMPORT.INT 
11170 RETURN
11180 '
11190 *COMPORT.INT
11200 *COMPORT.INT.1000
11210 IF LOC(1)=0 THEN RETURN
11220 G.RX.WRITE.DATA=ASC(INPUT$(1,1))
11230 GOSUB *RX.BUFF.WRITE
11240 IF G.COMPORT.ERROR=0 THEN G.COMPORT.ERROR=G.RX.BUFF.OV
11250 GOTO *COMPORT.INT.1000
11260 '
11270 '
11280 *SEND.DATA.TO.TRX
11290 PRINT #1,CHR$(G.SEND.DATA.TO.TRX);
11300 FOR SEND.DATA.TO.TRX.W=0 TO G.SEND.DATA.TO.TRX.W:NEXT
11310 RETURN
11320 '
11330 '
11340 *STOP.INT
11350 *FINISH
11360 IF G.COMPORT.ERROR<>0 THEN PRINT #2,"*****ERROR*****"
11370 COM OFF
11380 CLOSE
11390 COLOR 7
11400 END
11410 '
11420 '
11430 *MAIN
11440 INPUT "“ü—Íiƒf[ƒ^jƒtƒ@ƒCƒ‹–¼F",IN.FILE.NAME$
11450 INPUT "o—ÍiƒƒOjƒtƒ@ƒCƒ‹–¼F",OUT.FILE.NAME$
11460 GOSUB *READ.HEX.CHR
11470 GOSUB *RX.BUFF.INIT
11480 GOSUB *TX.BUFF.INIT
11490 GOSUB *COMPORT.INIT
11500 ON STOP GOSUB *STOP.INT
11510 STOP ON:COM ON
11520 '
11530 *MAIN.1000
11540 CLOSE 2
11550 OPEN OUT.FILE.NAME$ FOR OUTPUT AS #2
11560 CLOSE 3
11570 OPEN IN.FILE.NAME$ FOR INPUT AS #3
11580 OFFSET.ADRS=0
11590 '
11600 '‘—Mƒf[ƒ^€”õ
11610 *MAIN.1300
11620 COLOR 4
11630 IF EOF(3) THEN GOTO *MAIN.1400
11640 INPUT #3,INPUT.LINE$
11650 'PRINT INPUT.LINE$
11660 IF INPUT.LINE$="" THEN GOTO *MAIN.1300
11670 IF LEFT$(INPUT.LINE$,1)="'" THEN GOTO *MAIN.1300
11680 IF LEN(INPUT.LINE$)<>9 GOTO *MAIN.1380
11690 INPUT.DATA$=MID$(INPUT.LINE$,8,2)
11700 IF HEX.CHR$(VAL("&H"+INPUT.DATA$))<>INPUT.DATA$ THEN GOTO *MAIN.1380
11710 G.TX.WRITE.DATA=VAL("&H"+INPUT.DATA$)
11720 GOSUB *TX.BUFF.WRITE
11730 IF G.TX.BUFF.OV<>0 THEN PRINT:PRINT "**“ü—Íiƒf[ƒ^jƒtƒ@ƒCƒ‹‚ª‘å‚«‚·‚¬‚Ü‚·**":GOTO *FINISH
11740 GOTO *MAIN.1300
11750 '
11760 '‘—Mƒf[ƒ^ƒGƒ‰[
11770 *MAIN.1380
11780 PRINT:PRINT "**“ü—Íiƒf[ƒ^jƒtƒ@ƒCƒ‹‚ÉŒë‚è‚ª‚ ‚è‚Ü‚·**":GOTO *FINISH
11790 *MAIN.1400
11800 PRINT "--ƒf[ƒ^‚Ì€”õ‚ª‚Å‚«‚Ü‚µ‚½BƒXƒy[ƒXƒo[‚ð‰Ÿ‚µ‚Ä‚­‚¾‚³‚¢--"
11810 *MAIN.1410
11820 K$=INKEY$:IF K$<>" " THEN GOTO *MAIN.1410
11830 GOSUB *RX.BUFF.CLEAR
11840 COLOR 7
11850 G.SEND.BLOCK.N=10:G.SEND.BLOCK.ACK=6:GOSUB *SEND.BLOCK
11860 IF  SEND.BLOCK.ERROR=-1 THEN PRINT SEND.BLOCK.ERROR.MES$:GOTO *FINISH
11870 G.SEND.BLOCK.N=8:G.SEND.BLOCK.ACK=6:GOSUB *SEND.BLOCK
11880 IF  SEND.BLOCK.ERROR=-1 THEN PRINT SEND.BLOCK.ERROR.MES$:GOTO *FINISH
11890 G.SEND.BLOCK.N=30000:G.SEND.BLOCK.ACK=6:GOSUB *SEND.BLOCK
11900 *MAIN.1450
11910 PRINT:PRINT "--‘ž‚ÝI—¹--"
11920 GOTO *STOP.INT
11930 '
11940 '
11950 'ƒuƒƒbƒN‘—M
11960 *SEND.BLOCK
11970 SEND.BLOCK.ERROR=-1
11980 SEND.BLOCK.ERROR.MES$=""
11990 SEND.BLOCK.N=G.SEND.BLOCK.N
12000 '
12010 'ƒf[ƒ^‘—M“®ì
12020 *SEND.BLOCK.0500
12030 IF SEND.BLOCK.N=0 THEN GOTO *SEND.BLOCK.1000
12040 GOSUB *TX.BUFF.READ
12050 IF G.TX.BUFF.EM=-1 THEN SEND.BLOCK.ERROR.MES$="**“ü—Íiƒf[ƒ^jƒtƒ@ƒCƒ‹‚ª•s‘«‚µ‚Ä‚¢‚Ü‚·**":RETURN
12060 'PRINT #1,CHR$(G.TX.READ.DATA);
12070 G.SEND.DATA.TO.TRX=G.TX.READ.DATA:GOSUB *SEND.DATA.TO.TRX
12080 *SEND.BLOCK.0550
12090 COM STOP:GOSUB *RX.BUFF.READ:COM ON
12100 IF G.RX.BUFF.EM=-1 THEN GOTO *SEND.BLOCK.0550
12110 OUTPUT.STR$= HEX.CHR$(OFFSET.ADRS \ 256)+HEX.CHR$(OFFSET.ADRS MOD 256)+" : "+HEX.CHR$(G.RX.READ.DATA)
12120 PRINT #2,OUTPUT.STR$
12130 PRINT OUTPUT.STR$
12140 OFFSET.ADRS=OFFSET.ADRS+1
12150 SEND.BLOCK.N=SEND.BLOCK.N-1
12160 GOTO *SEND.BLOCK.0500
12170 *SEND.BLOCK.1000
12180 GOSUB *TX.BUFF.READ
12190 IF G.TX.BUFF.EM=-1 THEN SEND.BLOCK.ERROR.MES$="**“ü—Íiƒf[ƒ^jƒtƒ@ƒCƒ‹‚ª•s‘«‚µ‚Ä‚¢‚Ü‚·**":RETURN
12200 *SEND.BLOCK.1050
12210 COM STOP:GOSUB *RX.BUFF.READ:COM ON
12220 IF G.RX.BUFF.EM=-1 THEN GOTO *SEND.BLOCK.1050
12230 OUTPUT.STR$= HEX.CHR$(OFFSET.ADRS \ 256)+HEX.CHR$(OFFSET.ADRS MOD 256)+" : "+HEX.CHR$(G.RX.READ.DATA)
12240 PRINT #2,OUTPUT.STR$
12250 PRINT OUTPUT.STR$
12260 OFFSET.ADRS=OFFSET.ADRS+1
12270 IF G.RX.READ.DATA<>G.SEND.BLOCK.ACK THEN SEND.BLOCK.ERROR.MES$="**•s³‚È‚`‚b‚j‚Å‚·**":RETURN
12280 SEND.BLOCK.ERROR=0
12290 '
12300 PRINT:PRINT "--ƒuƒƒbƒN‘—MŠ®—¹--"
12310 RETURN





SAVEVX7.BAS


10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒNƒ[ƒ“ƒf[ƒ^“Ç‚Ýo‚µƒvƒƒOƒ‰ƒ€ Ver1.00 (Sep 22 2002)
10040 '
10050 'Copyright by Heian Software Engineering
10060 '(C)2002 H.S.E. Allrights reserved.
10070 '
10080 '**********************************************************
10090 '
10100 '
10110 '
10120 '
10130 '
10140 '
10150 *START
10160 CLEAR
10170 DEFINT A-Z
10180 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10190 '
10200 RX.BUFF.SIZE=32000:'ŽóMƒoƒbƒtƒ@ƒTƒCƒY
10210 DISP.SKIP.N=200:'•\Ž¦ƒXƒLƒbƒv“_
10220 '
10230 COMPORT.NAME$="COM1:N81NN":'’ÊMƒ|[ƒgƒtƒ@ƒCƒ‹ƒfƒBƒXƒNƒŠƒvƒ^
10240 COMPORT.SPEED=8:'’ÊM‘¬“x 8:19200,0:SPEEDƒRƒ}ƒ“ƒh‚É‚æ‚é
10250 '
10260 GOTO *MAIN
10270 '
10280 'HEX.CHR$
10290 GOTO *MAIN
10300 *READ.HEX.CHR
10310 DIM HEX.CHR$(255)
10320 RESTORE *READ.HEX.CHR
10330 FOR READ.HEX.CHR.W=0 TO 255:READ HEX.CHR$(READ.HEX.CHR.W):NEXT
10340 DATA 00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
10350 DATA 10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F
10360 DATA 20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F
10370 DATA 30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F
10380 DATA 40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F
10390 DATA 50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F
10400 DATA 60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F
10410 DATA 70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F
10420 DATA 80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F
10430 DATA 90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F
10440 DATA A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF
10450 DATA B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
10460 DATA C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF
10470 DATA D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF
10480 DATA E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF
10490 DATA F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF
10500 RETURN
10510 '
10520 *RX.BUFF.INIT
10530 DIM RX.BUFF(RX.BUFF.SIZE-1)
10540 GOSUB *RX.BUFF.CLEAR
10550 RETURN
10560 '
10570 *RX.BUFF.CLEAR
10580 G.RX.BUFF.RP=0:'“Ç‚Ýo‚µƒ|ƒCƒ“ƒ^
10590 G.RX.BUFF.WP=0:'‘‚«ž‚Ýƒ|ƒCƒ“ƒ^
10600 G.RX.BUFF.N=0 :'ƒoƒbƒtƒ@“àƒf[ƒ^”
10610 G.RX.BUFF.OV=0:'ƒoƒbƒtƒ@ƒI[ƒo[ƒtƒ[
10620 G.RX.BUFF.EM=0:'ƒoƒbƒtƒ@“àƒGƒ“ƒvƒeƒB
10630 RETURN
10640 '
10650 *RX.BUFF.WRITE
10660 IF G.RX.BUFF.N>=RX.BUFF.SIZE THEN G.RX.BUFF.OV=-1:RETURN
10670 RX.BUFF(G.RX.BUFF.WP)=G.RX.WRITE.DATA
10680 G.RX.BUFF.WP=(G.RX.BUFF.WP+1) MOD RX.BUFF.SIZE
10690 G.RX.BUFF.N=G.RX.BUFF.N+1
10700 G.RX.BUFF.OV=0
10710 RETURN
10720 '
10730 *RX.BUFF.READ
10740 IF G.RX.BUFF.N=0 THEN G.RX.BUFF.EM=-1:RETURN
10750 G.RX.READ.DATA=RX.BUFF(G.RX.BUFF.RP)
10760 G.RX.BUFF.RP=(G.RX.BUFF.RP+1) MOD RX.BUFF.SIZE
10770 G.RX.BUFF.N=G.RX.BUFF.N-1
10780 G.RX.BUFF.EM=0
10790 RETURN
10800 '
10810 '
10820 *COMPORT.INIT
10830 OPEN COMPORT.NAME$ AS #1
10840 IF COMPORT.SPEED=0 THEN GOTO *COMPORT.INIT.1000
10850 OUT &H75,COMPORT.SPEED MOD 256
10860 OUT &H75,COMPORT.SPEED \ 256
10870 *COMPORT.INIT.1000
10880 G.COMPORT.ERROR=0
10890 ON COM GOSUB *COMPORT.INT 
10900 RETURN
10910 '
10920 *COMPORT.INT
10930 *COMPORT.INT.1000
10940 IF LOC(1)=0 THEN RETURN
10950 G.RX.WRITE.DATA=ASC(INPUT$(1,1))
10960 GOSUB *RX.BUFF.WRITE
10970 IF G.COMPORT.ERROR=0 THEN G.COMPORT.ERROR=G.RX.BUFF.OV
10980 GOTO *COMPORT.INT.1000
10990 '
11000 '
11010 *STOP.INT
11020 IF G.COMPORT.ERROR<>0 THEN PRINT #2,"**ƒGƒ‰[**"
11030 COM OFF
11040 CLOSE
11050 COLOR 7
11060 END
11070 '
11080 '
11090 *MAIN
11100 INPUT "o—ÍiƒƒOjƒtƒ@ƒCƒ‹–¼F",OUT.FILE.NAME$
11110 GOSUB *READ.HEX.CHR
11120 GOSUB *RX.BUFF.INIT
11130 GOSUB *COMPORT.INIT
11140 ON STOP GOSUB *STOP.INT
11150 STOP ON:COM ON
11160 '
11170 *MAIN.1000
11180 COM OFF
11190 CLOSE 2
11200 OPEN OUT.FILE.NAME$ FOR OUTPUT AS #2
11210 OFFSET.ADRS=0
11220 GOSUB *RX.BUFF.CLEAR
11230 COM ON
11240 PRINT:PRINT "--€”õ‚n‚j--"
11250 '
11260 *MAIN.1500
11270 COM STOP:GOSUB *RX.BUFF.READ:COM ON
11280 IF G.COMPORT.ERROR<>0 THEN COLOR 2
11290 IF G.RX.BUFF.EM=-1 THEN GOTO *MAIN.2000
11300 OUTPUT.STR$= HEX.CHR$(OFFSET.ADRS \ 256)+HEX.CHR$(OFFSET.ADRS MOD 256)+" : "+HEX.CHR$(G.RX.READ.DATA)
11310 PRINT #2,OUTPUT.STR$
11320 IF DISP.SKIP.N=>G.RX.BUFF.N THEN PRINT OUTPUT.STR$
11330 OFFSET.ADRS=OFFSET.ADRS+1
11340 *MAIN.2000
11350 K$=INKEY$
11360 IF K$="" THEN GOTO 11270
11370 IF K$=CHR$(0) THEN GOTO *MAIN.1000
11380 PRINT #1,K$;
11390 GOTO *MAIN.1500




CNVVX7B.BAS

10000 '**********************************************************
10010 '
10020 'VERTEX STANDARD VX-7
10030 'ƒNƒ[ƒ“ƒf[ƒ^•ÏŠ·ƒvƒƒOƒ‰ƒ€ Ver2.00 (Oct 20 2002)
10040 'MG‘Î‰ž CNVVX7B.BAS
10050 '
10060 'Copyright by Heian Software Engineering
10070 '(C)2002 H.S.E. Allrights reserved.
10080 '
10090 '**********************************************************
10100 '
10110 '
10120 '
10130 *START
10140 CLEAR
10150 DEFINT A-Z
10160 WIDTH 80,25:CONSOLE 0,25,1,1:COLOR 7,0,0,7,2:CLS 2
10170 KEY 2,"system"+CHR$(&HD)
10180 GOTO *MAIN
10190 '
10200 *INIT.DATA.TABLE
10210 D.MAX=&H3FFF
10220 DIM D(D.MAX)
10230 FOR INIT.DATA.TABLE.W=0 TO D.MAX:D(INIT.DATA.TABLE.W)=-1:NEXT
10240 RESTORE *INIT.DATA.TABLE:GOSUB *READ.ERROR.MES
10250 DATA 60,"*** “ü—Íƒf[ƒ^‚ª•s‘«‚µ‚Ä‚¢‚Ü‚·B(060) ***"
10260 DATA 61,"*** “ü—Íƒf[ƒ^\‘¢‚ÉŒë‚è‚ª‚ ‚è‚Ü‚·B(061) ***"
10270 DATA -1,""
10280 RETURN
10290 '
10300 *READ.DATA.TABLE
10310 READ.DATA.TABLE.N=&H3F52
10320 READ.DATA.TABLE.NC=0
10330 *READ.DATA.TABLE.0000
10340 IF EOF(1) THEN READ.DATA.TABLE.ERR=60:RETURN
10350 LINE INPUT #1,READ.DATA.TABLE.I$
10360 IF READ.DATA.TABLE.I$="" THEN GOTO *READ.DATA.TABLE.0000
10370 IF LEFT$(READ.DATA.TABLE.I$,1)="'" THEN GOTO *READ.DATA.TABLE.0000
10380 IF LEN(READ.DATA.TABLE.I$)<>9 THEN READ.DATA.TABLE.ERR=61:RETURN
10390 READ.DATA.TABLE.IH$=MID$(READ.DATA.TABLE.I$,1,2)
10400 READ.DATA.TABLE.IL$=MID$(READ.DATA.TABLE.I$,3,2)
10410 READ.DATA.TABLE.ID$=MID$(READ.DATA.TABLE.I$,8,2)
10420 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IH$))<>READ.DATA.TABLE.IH$ THEN READ.DATA.TABLE.ERR=61:RETURN
10430 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.IL$))<>READ.DATA.TABLE.IL$ THEN READ.DATA.TABLE.ERR=61:RETURN
10440 IF HEX.CHR$(VAL("&H"+READ.DATA.TABLE.ID$))<>READ.DATA.TABLE.ID$ THEN READ.DATA.TABLE.ERR=61:RETURN
10450 READ.DATA.TABLE.AD=VAL("&H"+READ.DATA.TABLE.IH$)*256+VAL("&H"+READ.DATA.TABLE.IL$)
10460 IF READ.DATA.TABLE.AD>READ.DATA.TABLE.N THEN READ.DATA.TABLE.ERR=61:RETURN17300 IF READ.DATA.TABLE.AD<0 THEN READ.DATA.TABLE.ERR=61:RETURN
10470 D(READ.DATA.TABLE.AD)=VAL("&H"+READ.DATA.TABLE.ID$)
10480 READ.DATA.TABLE.NC=READ.DATA.TABLE.NC+1
10490 '
10500 IF READ.DATA.TABLE.NC MOD 256=0 THEN PRINT "*";
10510 IF READ.DATA.TABLE.NC<=READ.DATA.TABLE.N THEN GOTO *READ.DATA.TABLE.0000
10520 READ.DATA.TABLE.ERR=0
10530 FOR READ.DATA.TABLE.W=0 TO READ.DATA.TABLE.N
10540 IF D(READ.DATA.TABLE.W)<0 THEN READ.DATA.TABLE.ERR=60
10550 NEXT
10560 RETURN
10570 '
10580 '
10590 *READ.HEX.CHR
10600 DIM HEX.CHR$(255)
10610 FOR READ.HEX.CHR.W=0 TO 255:HEX.CHR$(READ.HEX.CHR.W)=RIGHT$("0"+HEX$(READ.HEX.CHR.W),2):NEXT
10620 RETURN
10630 '
10640 '
10650 *INIT.ERROR.MES
10660 DIM ERROR.MES$(200)
10670 RESTORE *INIT.ERROR.MES
10680 GOSUB *READ.ERROR.MES
10690 DATA 0,"--- ³íI—¹(000) ---"
10700 DATA -1,""
10710 RETURN
10720 '
10730 *READ.ERROR.MES
10740 READ READ.ERROR.MES.W
10750 IF READ.ERROR.MES.W=>0 THEN READ ERROR.MES$(READ.ERROR.MES.W):GOTO *READ.ERROR.MES
10760 RETURN
10770 '
10780 *READ.HDV.STR
10790 HDV.STR.MAX=1
10800 DIM HDV.STR$(HDV.STR.MAX)
10810 FOR READ.HDV.STR.W=0 TO HDV.STR.MAX:HDV.STR$(READ.HDV.STR.W)="???":NEXT
10820 RESTORE *READ.HDV.STR
10830 FOR READ.HDV.STR.W=0 TO HDV.STR.MAX
10840 READ HDV.STR$(READ.HDV.STR.W)
10850 IF HDV.STR$(READ.HDV.STR.W)="???" THEN READ.HDV.STR.W=HDV.STR.MAX+1
10860 NEXT
10870 DATA "N","H","???"
10880 HDV.STR.DEF=0
10890 RETURN
10900 '
10910 *CMP.HDV.STR
10920 CMP.HDV.STR.N=-1
10930 FOR CMP.HDV.STR.W=0 TO HDV.STR.MAX
10940 IF HDV.STR$(CMP.HDV.STR.W)=CMP.HDV.STR.S$ THEN CMP.HDV.STR.N=CMP.HDV.STR.W:CMP.HDV.STR.W=HDV.STR.MAX+2
10950 NEXT
10960 RETURN
10970 '
10980 '
10990 *READ.PWR.STR
11000 PWR.STR.MAX=3
11010 DIM PWR.STR$(PWR.STR.MAX)
11020 FOR READ.PWR.STR.W=0 TO PWR.STR.MAX:PWR.STR$(READ.PWR.STR.W)="???":NEXT
11030 RESTORE *READ.PWR.STR
11040 FOR READ.PWR.STR.W=0 TO PWR.STR.MAX
11050 READ PWR.STR$(READ.PWR.STR.W)
11060 IF PWR.STR$(READ.PWR.STR.W)="???" THEN READ.PWR.STR.W=PWR.STR.MAX+1
11070 NEXT
11080 DATA "L1","L2","L3","HI","???"
11090 PWR.STR.DEF=0
11100 RETURN
11110 '
11120 *CMP.PWR.STR
11130 CMP.PWR.STR.N=-1
11140 FOR CMP.PWR.STR.W=0 TO PWR.STR.MAX
11150 IF PWR.STR$(CMP.PWR.STR.W)=CMP.PWR.STR.S$ THEN CMP.PWR.STR.N=CMP.PWR.STR.W:CMP.PWR.STR.W=PWR.STR.MAX+2
11160 NEXT
11170 RETURN
11180 '
11190 '
11200 *READ.STP.STR
11210 STP.STR.MAX=15
11220 DIM STP.STR$(STP.STR.MAX)
11230 FOR READ.STR.STR.W=0 TO STR.STR.MAX:STR.STR$(READ.STR.STR.W)="???":NEXT
11240 RESTORE *READ.STP.STR
11250 FOR READ.STP.STR.W=0 TO STP.STR.MAX
11260 READ STP.STR$(READ.STP.STR.W)
11270 IF STP.STR$(READ.STP.STR.W)="???" THEN READ.STP.STR.W=STP.STR.MAX+1
11280 NEXT
11290 DATA "5","10","12.5","15","20","25","50","100","9","???"
11300 STP.STR.DEF=0
11310 RETURN
11320 '
11330 *CMP.STP.STR
11340 CMP.STP.STR.N=-1
11350 FOR CMP.STP.STR.W=0 TO STP.STR.MAX
11360 IF STP.STR$(CMP.STP.STR.W)=CMP.STP.STR.S$ THEN CMP.STP.STR.N=CMP.STP.STR.W:CMP.STP.STR.W=STP.STR.MAX+2
11370 NEXT
11380 RETURN
11390 '
11400 '
11410 *READ.SMP.STR
11420 SMP.STR.MAX=3
11430 DIM SMP.STR$(SMP.STR.MAX)
11440 FOR READ.SMP.STR.W=0 TO SMP.STR.MAX:SMP.STR$(READ.SMP.STR.W)="???":NEXT
11450 RESTORE *READ.SMP.STR
11460 FOR READ.SMP.STR.W=0 TO SMP.STR.MAX
11470 READ SMP.STR$(READ.SMP.STR.W)
11480 IF SMP.STR$(READ.SMP.STR.W)="???" THEN READ.SMP.STR.W=SMP.STR.MAX+1
11490 NEXT
11500 DATA "SIMP","-DUP","+DUP","TXRX","???"
11510 SMP.STR.DEF=0
11520 RETURN
11530 '
11540 *CMP.SMP.STR
11550 CMP.SMP.STR.N=-1
11560 FOR CMP.SMP.STR.W=0 TO SMP.STR.MAX
11570 IF SMP.STR$(CMP.SMP.STR.W)=CMP.SMP.STR.S$ THEN CMP.SMP.STR.N=CMP.SMP.STR.W:CMP.SMP.STR.W=SMP.STR.MAX+2
11580 NEXT
11590 RETURN
11600 '
11610 '
11620 *READ.MDE.STR
11630 MDE.STR.MAX=3
11640 DIM MDE.STR$(MDE.STR.MAX)
11650 FOR READ.MDE.STR.W=0 TO MDE.STR.MAX:MDE.STR$(READ.MDE.STR.W)="???":NEXT
11660 RESTORE *READ.MDE.STR
11670 FOR READ.MDE.STR.W=0 TO MDE.STR.MAX
11680 READ MDE.STR$(READ.MDE.STR.W)
11690 IF MDE.STR$(READ.MDE.STR.W)="???" THEN READ.MDE.STR.W=MDE.STR.MAX+1
11700 NEXT
11710 DATA "N-FM","AM","W-FM","???"
11720 MDE.STR.DEF=0
11730 RETURN
11740 '
11750 *CMP.MDE.STR
11760 CMP.MDE.STR.N=-1
11770 FOR CMP.MDE.STR.W=0 TO MDE.STR.MAX
11780 IF MDE.STR$(CMP.MDE.STR.W)=CMP.MDE.STR.S$ THEN CMP.MDE.STR.N=CMP.MDE.STR.W:CMP.MDE.STR.W=MDE.STR.MAX+2
11790 NEXT
11800 RETURN
11810 '
11820 '
11830 *READ.TON.STR
11840 TON.STR.MAX=255
11850 DIM TON.STR$(TON.STR.MAX)
11860 FOR READ.TON.STR.W=0 TO TON.STR.MAX:TON.STR$(READ.TON.STR.W)="???":NEXT
11870 RESTORE *READ.TON.STR
11880 FOR READ.TON.STR.W=0 TO TON.STR.MAX
11890 READ TON.STR$(READ.TON.STR.W)
11900 IF TON.STR$(READ.TON.STR.W)="???" THEN READ.TON.STR.W=TON.STR.MAX+1
11910 NEXT
11920 DATA "67.0","69.3","71.9","74.4","77.0","79.7","82.5","85.4","88.5","91.5"
11930 DATA "94.8","97.4","100.0","103.5","107.2","110.9","114.8","118.8","123.0","127.3"
11940 DATA "131.8","136.5","141.3","146.2","151.4","156.7","159.8","162.2","165.5","167.9"
11950 DATA "171.3","173.8","177.3","179.9","183.5","186.2","189.9","192.8","196.6","199.5"
11960 DATA "203.5","206.5","210.7","218.1","225.7","229.1","233.6","241.8","250.3","254.1"
11970 DATA "???"
11980 TON.STR.DEF=0
11990 RETURN
12000 '
12010 *CMP.TON.STR
12020 CMP.TON.STR.N=-1
12030 FOR CMP.TON.STR.W=0 TO TON.STR.MAX
12040 IF TON.STR$(CMP.TON.STR.W)=CMP.TON.STR.S$ THEN CMP.TON.STR.N=CMP.TON.STR.W:CMP.TON.STR.W=TON.STR.MAX+2
12050 NEXT
12060 RETURN
12070 '
12080 '
12090 *READ.DCS.STR
12100 DCS.STR.MAX=255
12110 DIM DCS.STR$(DCS.STR.MAX)
12120 FOR READ.DCS.STR.W=0 TO DCS.STR.MAX:DCS.STR$(READ.DCS.STR.W)="???":NEXT
12130 RESTORE *READ.DCS.STR
12140 FOR READ.DCS.STR.W=0 TO DCS.STR.MAX
12150 READ DCS.STR$(READ.DCS.STR.W)
12160 IF DCS.STR$(READ.DCS.STR.W)="???" THEN READ.DCS.STR.W=DCS.STR.MAX+1
12170 NEXT
12180 DATA "023","025","026","031","032","036","043","047","051","053"
12190 DATA "054","065","071","072","073","074","114","115","116","122"
12200 DATA "125","131","132","134","143","145","152","155","156","162"
12210 DATA "165","172","174","205","212","223","225","226","243","244"
12220 DATA "245","246","251","252","255","261","263","265","266","271"
12230 DATA "274","306","311","315","325","331","332","343","346","351"
12240 DATA "356","364","365","371","411","412","413","423","431","432"
12250 DATA "445","446","452","454","455","462","464","465","466","503"
12260 DATA "506","516","523","526","532","546","565","606","612","624"
12270 DATA "627","631","632","654","662","664","703","712","723","731"
12280 DATA "732","734","743","754"
12290 DATA "???"
12300 DCS.STR.DEF=0
12310 RETURN
12320 '
12330 *CMP.DCS.STR
12340 CMP.DCS.STR.N=-1
12350 FOR CMP.DCS.STR.W=0 TO DCS.STR.MAX
12360 IF DCS.STR$(CMP.DCS.STR.W)=CMP.DCS.STR.S$ THEN CMP.DCS.STR.N=CMP.DCS.STR.W:CMP.DCS.STR.W=DCS.STR.MAX+2
12370 NEXT
12380 RETURN
12390 '
12400 '
12410 *READ.SQL.STR
12420 SQL.STR.MAX=7
12430 DIM SQL.STR$(SQL.STR.MAX)
12440 FOR READ.SQL.STR.W=0 TO SQL.STR.MAX:SQL.STR$(READ.SQL.STR.W)="???":NEXT
12450 RESTORE *READ.SQL.STR
12460 FOR READ.SQL.STR.W=0 TO SQL.STR.MAX
12470 READ SQL.STR$(READ.SQL.STR.W)
12480 IF SQL.STR$(READ.SQL.STR.W)="???" THEN READ.SQL.STR.W=SQL.STR.MAX+1
12490 NEXT
12500 DATA "NONE","TONE","TSQL","DCS","???"
12510 SQL.STR.DEF=0
12520 RETURN
12530 '
12540 *CMP.SQL.STR
12550 CMP.SQL.STR.N=-1
12560 FOR CMP.SQL.STR.W=0 TO SQL.STR.MAX
12570 IF SQL.STR$(CMP.SQL.STR.W)=CMP.SQL.STR.S$ THEN CMP.SQL.STR.N=CMP.SQL.STR.W:CMP.SQL.STR.W=SQL.STR.MAX+2
12580 NEXT
12590 RETURN

12600 '
12610 '
12620 *READ.SKP.STR
12630 SKP.STR.MAX=1
12640 DIM SKP.STR$(SKP.STR.MAX)
12650 FOR READ.SKP.STR.W=0 TO SKP.STR.MAX:SKP.STR$(READ.SKP.STR.W)="???":NEXT
12660 RESTORE *READ.SKP.STR
12670 FOR READ.SKP.STR.W=0 TO SKP.STR.MAX
12680 READ SKP.STR$(READ.SKP.STR.W)
12690 IF SKP.STR$(READ.SKP.STR.W)="???" THEN READ.SKP.STR.W=SKP.STR.MAX+1
12700 NEXT
12710 DATA "N","S","???"
12720 SKP.STR.DEF=0
12730 RETURN
12740 '
12750 *CMP.SKP.STR
12760 CMP.SKP.STR.N=-1
12770 FOR CMP.SKP.STR.W=0 TO SKP.STR.MAX
12780 IF SKP.STR$(CMP.SKP.STR.W)=CMP.SKP.STR.S$ THEN CMP.SKP.STR.N=CMP.SKP.STR.W:CMP.SKP.STR.W=SKP.STR.MAX+2
12790 NEXT
12800 RETURN
12810 '
12820 '
12830 *READ.PRF.STR
12840 PRF.STR.MAX=1
12850 DIM PRF.STR$(PRF.STR.MAX)
12860 FOR READ.PRF.STR.W=0 TO PRF.STR.MAX:PRF.STR$(READ.PRF.STR.W)="???":NEXT
12870 RESTORE *READ.PRF.STR
12880 FOR READ.PRF.STR.W=0 TO PRF.STR.MAX
12890 READ PRF.STR$(READ.PRF.STR.W)
12900 IF PRF.STR$(READ.PRF.STR.W)="???" THEN READ.PRF.STR.W=PRF.STR.MAX+1
12910 NEXT
12920 DATA "N","P","???"
12930 PRF.STR.DEF=0
12940 RETURN
12950 '
12960 *CMP.PRF.STR
12970 CMP.PRF.STR.N=-1
12980 FOR CMP.PRF.STR.W=0 TO PRF.STR.MAX
12990 IF PRF.STR$(CMP.PRF.STR.W)=CMP.PRF.STR.S$ THEN CMP.PRF.STR.N=CMP.PRF.STR.W:CMP.PRF.STR.W=PRF.STR.MAX+2
13000 NEXT
13010 RETURN
13020 '
13030 '
13040 *READ.TAG.STR
13050 TAG.STR.MAX=512
13060 DIM TAG.STR$(TAG.STR.MAX)
13070 FOR READ.TAG.STR.W=0 TO TAG.STR.MAX:TAG.STR$(READ.TAG.STR.W)="???":NEXT
13080 RESTORE *READ.TAG.STR
13090 FOR READ.TAG.STR.W=0 TO TAG.STR.MAX
13100 READ TAG.STR$(READ.TAG.STR.W)
13110 IF TAG.STR$(READ.TAG.STR.W)="???" THEN READ.TAG.STR.W=TAG.STR.MAX+1
13120 NEXT
13130 DATA "‚O","‚P","‚Q","‚R","‚S","‚T","‚U","‚V","‚W","‚X","@","‚`","‚a","‚b","‚c","‚d":'0
13140 DATA "‚e","‚f","‚g","‚h","‚i","‚j","‚k","‚l","‚m","‚n","‚o","‚p","‚q","‚r","‚s","‚t":'1
13150 DATA "‚u","‚v","‚w","‚x","‚y","‚","‚‚","‚ƒ","‚„","‚…","‚†","‚‡","‚ˆ","‚‰","‚Š","‚‹":'2
13160 DATA "‚Œ","‚","‚Ž","‚","‚","‚‘","‚’","‚“","‚”","‚•","‚–","‚—","‚˜","‚™","‚š","D":'3
13170 DATA "C","F","G","I","h","”","","“","•","f","i","j","–","{","|","E":'4
13180 DATA "","ƒ","„","H","—","m","","n","O","Q","_","o","b","p","¨","©":'5
13190 DATA "£","¥","`","š","€","~","ã","ƒÉ","ƒÊ","ƒÎ","ƒÓ","ƒÖ","ƒ¶","Ž","™","’":'6
13200 DATA "}","ç","ô","œ","ó","›","u","v","E","‰","Š","§","‚ ","‚¢","‚¤","‚¦":'7
13210 DATA "‚¨","‚©","‚«","‚­","‚¯","‚±","‚³","‚µ","‚·","‚¹","‚»","‚½","‚¿","‚Â","‚Ä","‚Æ":'8
13220 DATA "‚È","‚É","‚Ê","‚Ë","‚Ì","‚Í","‚Ð","‚Ó","‚Ö","‚Ù","‚Ü","‚Ý","‚Þ","‚ß","‚à","‚â":'9
13230 DATA "‚ä","‚æ","‚ç","‚è","‚é","‚ê","‚ë","‚í","‚ð","‚ñ","@","@","‚ª","‚¬","‚®","‚°":'A
13240 DATA "‚²","‚´","‚¶","‚¸","‚º","‚¼","‚¾","‚À","‚Ã","‚Å","‚Ç","‚Î","‚Ñ","‚Ô","‚×","‚Ú":'B
13250 DATA "‚Ï","‚Ò","‚Õ","‚Ø","‚Û","‚Ÿ","‚¡","‚£","‚¥","‚§","‚á","‚ã","‚å","‚Á","ƒA","ƒC":'C
13260 DATA "ƒE","ƒG","ƒI","ƒJ","ƒL","ƒN","ƒP","ƒR","ƒT","ƒV","ƒX","ƒZ","ƒ\","ƒ^","ƒ`","ƒc":'D
13270 DATA "ƒe","ƒg","ƒi","ƒj","ƒk","ƒl","ƒm","ƒn","ƒq","ƒt","ƒw","ƒz","ƒ}","ƒ~","ƒ€","ƒ":'E
13280 DATA "ƒ‚","ƒ„","ƒ†","ƒˆ","ƒ‰","ƒŠ","ƒ‹","ƒŒ","ƒ","ƒ","ƒ’","ƒ“","ƒK","ƒM","ƒO","ƒQ":'F
13290 DATA "ƒS","ƒU","ƒW","ƒY","ƒ[","ƒ]","ƒ_","ƒa","ƒd","ƒf","ƒh","ƒo","ƒr","ƒu","ƒx","ƒ{":'0
13300 DATA "ƒp","ƒs","ƒv","ƒy","ƒ|","ƒ@","ƒB","ƒD","ƒF","ƒH","ƒƒ","ƒ…","ƒ‡","ƒb","ˆ¤","ˆ³":'1
13310 DATA "ˆÉ","ˆÊ","ˆä","ˆç","ˆê","ˆï","‰p","‰q","‰z","‰~","‰“","‰¡","‰ª","‰«","‰®","‰·":'2
13320 DATA "‰¹","‰»","‰Ì","‰Í","‰Î","","Ž­","‰ê","ŠC","Š`","Šu","Šw","Šƒ","ŠÔ","ŠÖ","›":'3
13330 DATA "Šâ","Šî","‹@","‹C","é","Šò","‹}","‹~","‹ã","‹ž","‹³","‹´","‹Ê","‹Ö","‹à","‹æ":'4
13340 DATA "‹ó","ŒF","ŒI","ŒQ","ŒS","Œ`","Œx","ŒŽ","Œ§","Œ´","Œ¾","ŒÀ","ŒÉ","ž","ŒÃ","ŒÜ":'5
13350 DATA "Œê","Œû","L","q","‚","‡","","‘","•","ª","²","Ð","é","¼","â","è":'6
13360 DATA "Ž@","ŽD","‘ò","àV","ŽO","ŽR","Žl","Žm","Žs","Ž~","Ž†","Ž ","Ž™","Žž","Ž¦","Ž©":'7
13370 DATA "Žµ","Žæ","Žè","Žê","Žð","B","H","W","\","d","‘","¬","Á","ã","V","X":'8
13380 DATA "_","…","§","Â","Ã","Î","Ý","å","ç","ì","ü","‘D","‘Š","‘","‘—","‘©":'9
13390 DATA "‘ª","‘±","‘º","‘à","‘ä","‘å","‘æ","‘ê","’P","’m","’†","’¡","’©","’¬","’®","’·":'A
13400 DATA "’¹","’è","“S","“V","“c","“d","ŒË","“s","“x","“y","“‡","“Œ","“","“¡","“¹","“¿":'B
13410 DATA "“Á","“Ç","“È","“Þ","“ê","“ñ","“ú","À","”Z","”\","”n","”„","”•","”ª","ã","”Ñ":'C
13420 DATA "”ö","•Q","•S","•\","•b","•l","•x","•{","•Œ","•","•”","•","•Ÿ","•ª","•¶","•·":'D
13430 DATA "•º","•À","•ú","–F","–h","–k","–y","–{","–ˆ","–œ","‹{","–³","–¼","–Ø","’J","–ì":'E
13440 DATA "—t","—z","—","—œ","—Ç","—Ñ","—é","˜A","˜H","˜Z","˜a","¬","¬","¬","¬","¬":'F
13450 DATA "???"
13460 TAG.STR.DEF=0
13470 RETURN
13480 '
13490 *CMP.TAG.STR
13500 CMP.TAG.STR.N=-1
13510 FOR CMP.TAG.STR.W=0 TO TAG.STR.MAX
13520 IF TAG.STR$(CMP.TAG.STR.W)=CMP.TAG.STR.S$ THEN CMP.TAG.STR.N=CMP.TAG.STR.W:CMP.TAG.STR.W=TAG.STR.MAX+2
13530 NEXT
13540 RETURN
13550 '
13560 '
13570 *SCAN.MG.LIST
13580 SCAN.MG.LIST.NO=-1
13590 FOR SCAN.MG.LIST.W0=1 TO 9
13600 FOR SCAN.MG.LIST.W1=0 TO 47
13610 IF FNMG.LIST(SCAN.MG.LIST.W0,SCAN.MG.LIST.W1)=SCAN.MG.LIST.NI-1 THEN SCAN.MG.LIST.NO=SCAN.MG.LIST.W0
13620 NEXT
13630 NEXT
13640 RETURN
13650 '
13660 '
13670 '
13680 *GET.MEMORY.STR
13690 GET.MEMORY.STR.OFFSET=&H1322+22*(GET.MEMORY.STR.N-1)
13700 HDV.STR$=HDV.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET),1,1))
13710 PWR.STR$=PWR.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+1),7,2))
13720 STP.STR$=STP.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+1),3,4))
13730 SMP.STR$=SMP.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+1),5,2))
13740 MDE.STR$=MDE.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+5),1,2))
13750 TON.STR$=TON.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+18),7,8))
13760 DCS.STR$=DCS.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+19),7,8))
13770 SQL.STR$=SQL.STR$(FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+20),1,2))
13780 TAG.STR$=""
13790 FOR GET.MEMORY.STR.W=0 TO 7
13800 TAG.STR$=TAG.STR$+TAG.STR$(D(GET.MEMORY.STR.OFFSET+6+GET.MEMORY.STR.W)+256*FNBIT.MASK(D(GET.MEMORY.STR.OFFSET+21),GET.MEMORY.STR.W,1))
13810 NEXT
13820 FRQ0.STR$=HEX.CHR$(D(GET.MEMORY.STR.OFFSET+2))+LEFT$(HEX.CHR$(D(GET.MEMORY.STR.OFFSET+3)),1)+"."+RIGHT$(HEX.CHR$(D(GET.MEMORY.STR.OFFSET+3)),1)+HEX.CHR$(D(GET.MEMORY.STR.OFFSET+4))
13830 IF RIGHT$(FRQ0.STR$,1)="2" OR RIGHT$(FRQ0.STR$,1)="7" THEN FRQ0.STR$=FRQ0.STR$+"5" ELSE FRQ0.STR$=FRQ0.STR$+"0"
13840 FRQ1.STR$=HEX.CHR$(D(GET.MEMORY.STR.OFFSET+15))+LEFT$(HEX.CHR$(D(GET.MEMORY.STR.OFFSET+16)),1)+"."+RIGHT$(HEX.CHR$(D(GET.MEMORY.STR.OFFSET+16)),1)+HEX.CHR$(D(GET.MEMORY.STR.OFFSET+17))
13850 IF RIGHT$(FRQ1.STR$,1)="2" OR RIGHT$(FRQ1.STR$,1)="7" THEN FRQ1.STR$=FRQ1.STR$+"5" ELSE FRQ1.STR$=FRQ1.STR$+"0"
13860 SKP.STR$=SKP.STR$(FNBIT.MASK(FNFLAG.LIST(GET.MEMORY.STR.N),3,1))
13870 PRF.STR$=PRF.STR$(FNBIT.MASK(FNFLAG.LIST(GET.MEMORY.STR.N),2,1))
13880 SCAN.MG.LIST.NI=GET.MEMORY.STR.N:GOSUB *SCAN.MG.LIST
13890 IF SCAN.MG.LIST.NO>0 THEN MGL.STR$=RIGHT$(STR$(SCAN.MG.LIST.NO),1) ELSE MGL.STR$=""
13900 MCH.STR$=RIGHT$(STR$(W),LEN(STR$(W))-1)
13910 MEMORY.STR$=""
13920 MEMORY.STR$=MEMORY.STR$+MCH.STR$+","
13930 MEMORY.STR$=MEMORY.STR$+FRQ0.STR$+","
13940 MEMORY.STR$=MEMORY.STR$+STP.STR$+","
13950 MEMORY.STR$=MEMORY.STR$+TAG.STR$+","
13960 MEMORY.STR$=MEMORY.STR$+MGL.STR$+","
13970 MEMORY.STR$=MEMORY.STR$+SMP.STR$+","
13980 MEMORY.STR$=MEMORY.STR$+FRQ1.STR$+","
13990 MEMORY.STR$=MEMORY.STR$+MDE.STR$+","
14000 MEMORY.STR$=MEMORY.STR$+SQL.STR$+","
14010 MEMORY.STR$=MEMORY.STR$+TON.STR$+","
14020 MEMORY.STR$=MEMORY.STR$+DCS.STR$+","
14030 MEMORY.STR$=MEMORY.STR$+PWR.STR$+","
14040 MEMORY.STR$=MEMORY.STR$+HDV.STR$+","
14050 MEMORY.STR$=MEMORY.STR$+SKP.STR$+","
14060 MEMORY.STR$=MEMORY.STR$+PRF.STR$
14070 ' 
14080 RETURN
14090 '
14100 '
14110 '
14120 *WAIT.TYPE.COMMAND
14130 IF INKEY$<>"" THEN GOTO *WAIT.TYPE.COMMAND
14140 *WAIT.TYPE.COMMAND.1000
14150 WAIT.TYPE.COMMAND.C$=INKEY$
14160 IF WAIT.TYPE.COMMAND.C$="" THEN GOTO *WAIT.TYPE.COMMAND.1000
14170 IF INSTR(WAIT.TYPE.COMMAND.S$,WAIT.TYPE.COMMAND.C$)<>0 THEN RETURN
14180 GOTO *WAIT.TYPE.COMMAND.1000
14190 '
14200 '
14210 *FINISH
14220 CLOSE
14230 PRINT:PRINT
14240 IF ERROR.CODE=0 THEN COLOR 7 ELSE COLOR 2
14250 PRINT ERROR.MES$(ERROR.CODE)
14260 COLOR 7
14270 END
14280 '
14290 *MAIN
14300 GOSUB *READ.HEX.CHR
14310 GOSUB *INIT.ERROR.MES
14320 GOSUB *INIT.DATA.TABLE
14330 GOSUB *READ.HDV.STR
14340 GOSUB *READ.PWR.STR
14350 GOSUB *READ.STP.STR
14360 GOSUB *READ.SMP.STR
14370 GOSUB *READ.MDE.STR
14380 GOSUB *READ.TON.STR
14390 GOSUB *READ.DCS.STR
14400 GOSUB *READ.SQL.STR
14410 GOSUB *READ.TAG.STR
14420 GOSUB *READ.SKP.STR
14430 GOSUB *READ.PRF.STR
14440 DEF FNBIT.MASK(A,B,C)=(A \ 2^(B+1-C)) AND ((2^C)-1)
14450 DEF FNMG.LIST(A,B)=(D(&HEA2+(A-1)*96+B*2) AND &H7F)*256+D(&HEA2+(A-1)*96+B*2+1)
14460 DEF FNFLAG.LIST(A)=((D(&H1202+(A-1)\2)\16) AND &HF)*(1+((A-1) MOD 2=0))+((D(&H1202+(A-1)\2)\1) AND &HF)*(1+((A-1) MOD 2=1))
14470 '
14480 '
14490 '
14500 PRINT "ˆ—‚ð‘I‘ð‚µ‚Ä‚­‚¾‚³‚¢"
14510 PRINT
14520 PRINT "0FƒNƒ[ƒ“ƒf[ƒ^ ‚©‚ç ƒƒ‚ƒŠ[ƒf[ƒ^iƒeƒLƒXƒgj ‚É•ÏŠ·"
14530 PRINT
14540 PRINT "1Fƒƒ‚ƒŠ[ƒf[ƒ^iƒeƒLƒXƒgj ‚©‚ç ƒNƒ[ƒ“ƒf[ƒ^ ‚É•ÏŠ·"
14550 PRINT
14560 WAIT.TYPE.COMMAND.S$="01":GOSUB *WAIT.TYPE.COMMAND
14570 IF WAIT.TYPE.COMMAND.C$="0" THEN GOTO *MAIN.5000 ELSE GOTO *MAIN.6000
14580 '
14590 '
14600 '0FƒNƒ[ƒ“ƒf[ƒ^¨ƒeƒLƒXƒg
14610 *MAIN.5000
14620 LINE INPUT "ƒNƒ[ƒ“ƒf[ƒ^i“ü—Íjƒtƒ@ƒCƒ‹F",IN.FILE$
14630 OPEN IN.FILE$ FOR INPUT AS #1
14640 GOSUB *READ.DATA.TABLE
14650 CLOSE #1
14660 PRINT
14670 IF READ.DATA.TABLE.ERR<>0 THEN  ERROR.CODE=READ.DATA.TABLE.ERR:GOTO *FINISH
14671 LINE INPUT "ƒƒ‚ƒŠ[ƒf[ƒ^io—Íjƒtƒ@ƒCƒ‹F",OUT.FILE$
14680 OPEN OUT.FILE$ FOR OUTPUT AS #2
14690 GOSUB *MAIN.7050:GOSUB *MAIN.7000:O$=MEMORY.STR$
14700 PRINT O$
14710 PRINT #2,O$
14720 FOR W=1 TO 500
14730 IF (FNFLAG.LIST(W) AND 3)<>3 THEN GOTO *MAIN.5700
14740 GET.MEMORY.STR.N=W
14750 GOSUB *GET.MEMORY.STR
14760 O$=MEMORY.STR$
14770 PRINT O$
14780 PRINT #2,O$
14790 *MAIN.5700
14800 NEXT
14810 ERROR.CODE=0:GOTO *FINISH
14820 '
14830 '
14840 '1FƒeƒLƒXƒg¨ƒNƒ[ƒ“ƒf[ƒ^
14850 *MAIN.6000
14860 LINE INPUT "ƒeƒ“ƒvƒŒ[ƒg—pƒNƒ[ƒ“ƒf[ƒ^ƒtƒ@ƒCƒ‹F",IN.FILE$
14870 OPEN IN.FILE$ FOR INPUT AS #1
14880 GOSUB *READ.DATA.TABLE
14890 CLOSE #1
14900 PRINT
14910 IF READ.DATA.TABLE.ERR<>0 THEN  ERROR.CODE=READ.DATA.TABLE.ERR:GOTO *FINISH4930 FOR MAIN.W=&H1322 TO &H3E19:D(MAIN.W)=&HFF:NEXT:'ƒƒ‚ƒŠ[ƒf[ƒ^–{‘Ì
14920 FOR MAIN.W=&H1202 TO &H12FB:D(MAIN.W)=&H0:NEXT:'—LŒø«ƒtƒ‰ƒO
14930 FOR MAIN.W=&H742 TO &H753:D(MAIN.W)=&HFF:NEXT:'‚l‚fŠ‘®ƒƒ‚ƒŠ”
14940 FOR MAIN.W=&HEA2 TO &H1201:D(MAIN.W)=&HFF:NEXT:'‚l‚fŠ‘®ƒƒ‚ƒŠ
14950 OPEN "ERRVX7.TXT" FOR OUTPUT AS #2
14960 '
14970 LINE INPUT "ƒƒ‚ƒŠ[ƒf[ƒ^i“ü—Íjƒtƒ@ƒCƒ‹F",IN.FILE$
14980 OPEN IN.FILE$ FOR INPUT AS #1
14990 RESTORE *MAIN.6900:GOSUB *READ.ERROR.MES
15000 F.ERROR=0
15010 DIM MG(9)
15020 GOSUB *MAIN.7050:MCH.STRX$=MCH.STR$
15030 *MAIN.6010
15040 IF EOF(1) THEN GOTO *MAIN.6800
15050 INPUT #1,MCH.STR$,FRQ0.STR$,STP.STR$,TAG.STR$,MGL.STR$,SMP.STR$,FRQ1.STR$,MDE.STR$,SQL.STR$,TON.STR$,DCS.STR$,PWR.STR$,HDV.STR$,SKP.STR$,PRF.STR$
15060 IF MCH.STR$=MCH.STRX$ THEN GOTO *MAIN.6010
15070 IF FRQ0.STR$="" THEN GOTO *MAIN.6010
15080 GOSUB *MAIN.7000
15090 '
15100 PRINT MEMORY.STR$
15110 PRINT #2,MEMORY.STR$
15120 MCH=VAL(MCH.STR$)
15130 IF MCH<1 OR MCH>500 THEN ERROR.CODE=157:GOSUB *MAIN.6600:MCH=1
15140 MEMORY.STR.OFFSET=&H1322+22*(MCH-1)
15150 '
15160 CMP.STP.STR.S$=STP.STR$:GOSUB *CMP.STP.STR
15170 IF CMP.STP.STR.N<0 THEN CMP.STP.STR.N=STP.STR.DEF:ERROR.CODE=102:GOSUB *MAIN.6600
15180 D(MEMORY.STR.OFFSET+1)=(D(MEMORY.STR.OFFSET+1) AND &H0) OR ((CMP.STP.STR.N*&H1) AND &HF)
15190 '
15200 '
15210 CMP.SMP.STR.S$=SMP.STR$:GOSUB *CMP.SMP.STR
15220 IF CMP.SMP.STR.N<0 THEN CMP.SMP.STR.N=SMP.STR.DEF:ERROR.CODE=103:GOSUB *MAIN.6600
15230 D(MEMORY.STR.OFFSET+1)=(D(MEMORY.STR.OFFSET+1) AND &HFF) OR ((CMP.SMP.STR.N*&H10) AND &H30)
15240 '
15250 '
15260 CMP.PWR.STR.S$=PWR.STR$:GOSUB *CMP.PWR.STR
15270 IF CMP.PWR.STR.N<0 THEN CMP.PWR.STR.N=PWR.STR.DEF:ERROR.CODE=104:GOSUB *MAIN.6600
15280 D(MEMORY.STR.OFFSET+1)=(D(MEMORY.STR.OFFSET+1) AND &HFF) OR ((CMP.PWR.STR.N*&H40) AND &HC0)
15290 '
15300 '
15310 CMP.MDE.STR.S$=MDE.STR$:GOSUB *CMP.MDE.STR
15320 IF CMP.MDE.STR.N<0 THEN CMP.MDE.STR.N=MDE.STR.DEF:ERROR.CODE=105:GOSUB *MAIN.6600
15330 D(MEMORY.STR.OFFSET+5)=(D(MEMORY.STR.OFFSET+5) AND &H0) OR ((CMP.MDE.STR.N*&H1) AND &H3)
15340 '
15350 '
15360 CMP.TON.STR.S$=TON.STR$:GOSUB *CMP.TON.STR
15370 IF CMP.TON.STR.N<0 THEN CMP.TON.STR.N=TON.STR.DEF:ERROR.CODE=106:GOSUB *MAIN.6600
15380 D(MEMORY.STR.OFFSET+18)=(D(MEMORY.STR.OFFSET+18) AND &H0) OR ((CMP.TON.STR.N*&H1) AND &HFF)
15390 '
15400 '
15410 CMP.DCS.STR.S$=DCS.STR$:GOSUB *CMP.DCS.STR
15420 IF CMP.DCS.STR.N<0 THEN CMP.DCS.STR.N=DCS.STR.DEF:ERROR.CODE=107:GOSUB *MAIN.6600
15430 D(MEMORY.STR.OFFSET+19)=(D(MEMORY.STR.OFFSET+19) AND &H0) OR ((CMP.DCS.STR.N*&H1) AND &HFF)
15440 '
15450 '
15460 CMP.SQL.STR.S$=SQL.STR$:GOSUB *CMP.SQL.STR
15470 IF CMP.SQL.STR.N<0 THEN CMP.SQL.STR.N=SQL.STR.DEF:ERROR.CODE=108:GOSUB *MAIN.6600
15480 D(MEMORY.STR.OFFSET+20)=(D(MEMORY.STR.OFFSET+20) AND &H0) OR ((CMP.SQL.STR.N*&H1) AND &H3)
15490 '
15500 '
15510 CMP.HDV.STR.S$=HDV.STR$:GOSUB *CMP.HDV.STR
15520 IF CMP.HDV.STR.N<0 THEN CMP.HDV.STR.N=HDV.STR.DEF:ERROR.CODE=109:GOSUB *MAIN.6600
15530 D(MEMORY.STR.OFFSET)=(D(MEMORY.STR.OFFSET) AND &H0) OR ((CMP.HDV.STR.N*&H2) AND &H2)
15540 '
15550 '
15560 D(MEMORY.STR.OFFSET+21)=0
15570 TAG.STR$=TAG.STR$+"@@@@@@@@"
15580 FOR MAIN.W=0 TO 7
15590 CMP.TAG.STR.S$=MID$(TAG.STR$,1+MAIN.W*2,2):GOSUB *CMP.TAG.STR
15600 IF CMP.TAG.STR.N<0 THEN ERROR.CODE=150:GOSUB *MAIN.6600
15610 D(MEMORY.STR.OFFSET+6+MAIN.W)=CMP.TAG.STR.N MOD 256
15620 D(MEMORY.STR.OFFSET+21)=D(MEMORY.STR.OFFSET+21)\2 OR ((CMP.TAG.STR.N \ 256)*&H80)
15630 NEXT
15640 '
15650 MAIN.W13$=FRQ0.STR$:GOSUB *MAIN.6950
15660 IF ERROR.CODE<>0 THEN GOSUB *MAIN.6600
15670 D(MEMORY.STR.OFFSET+4)=MAIN.W102
15680 D(MEMORY.STR.OFFSET+3)=MAIN.W101
15690 D(MEMORY.STR.OFFSET+2)=MAIN.W100
15700 GOSUB *MAIN.7100
15710 IF (CMP.BND.STR.N=0) AND (CMP.STP.STR.N=1 OR CMP.STP.STR.N=8) THEN GOTO *MAIN.6070
15720 IF (CMP.BND.STR.N>0 AND CMP.BND.STR.N<11) AND (CMP.STP.STR.N<8) THEN GOTO *MAIN.6070
15730 IF (CMP.BND.STR.N=11) AND (CMP.STP.STR.N=1 OR CMP.STP.STR.N=2 OR CMP.STP.STR.N=4 OR CMP.STP.STR.N=5 OR CMP.STP.STR.N=6 OR CMP.STP.STR.N=7) THEN GOTO *MAIN.6070
15740 ERROR.CODE=156:GOSUB *MAIN.6600:GOTO *MAIN.6080
15750 *MAIN.6070
15760 IF CMP.BND.STR.N<0 THEN ERROR.CODE=155:GOSUB *MAIN.6600:GOTO *MAIN.6080
15770 IF (CMP.STP.STR.N=0) AND ((MAIN.FL MOD 50)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15780 IF (CMP.STP.STR.N=1) AND ((MAIN.FL MOD 50)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15790 IF (CMP.STP.STR.N=2) AND ((MAIN.FL MOD 125)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15800 IF (CMP.STP.STR.N=3) AND ((MAIN.FL MOD 50)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15810 IF (CMP.STP.STR.N=4) AND ((MAIN.FL MOD 100)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15820 IF (CMP.STP.STR.N=5) AND ((MAIN.FL MOD 125)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15830 IF (CMP.STP.STR.N=6) AND ((MAIN.FL MOD 250)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15840 IF (CMP.STP.STR.N=7) AND ((MAIN.FL MOD 500)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15850 IF (CMP.STP.STR.N=8) AND ((((MAIN.FH MOD 10)*1000+MAIN.FL/10) MOD 9)<>0) THEN ERROR.CODE=154:GOSUB *MAIN.6600
15860 '
15870 *MAIN.6080
15880 MAIN.W13$=FRQ1.STR$:GOSUB *MAIN.6950
15890 IF ERROR.CODE<>0 THEN GOSUB *MAIN.6600
15900 D(MEMORY.STR.OFFSET+17)=MAIN.W102
15910 D(MEMORY.STR.OFFSET+16)=MAIN.W101
15920 D(MEMORY.STR.OFFSET+15)=MAIN.W100
15930 '
15940 D(MEMORY.STR.OFFSET+5)=D(MEMORY.STR.OFFSET+5) OR &H30
15950 D(MEMORY.STR.OFFSET+14)=&H0
15960 IF (CMP.STP.STR.N=2) OR (CMP.STP.STR.N=5) OR (CMP.STP.STR.N=7) OR (CMP.STP.STR.N=7) THEN  D(MEMORY.STR.OFFSET)=D(MEMORY.STR.OFFSET) OR 5
15970 IF (CMP.STP.STR.N=8) THEN  D(MEMORY.STR.OFFSET)=D(MEMORY.STR.OFFSET) OR 2
15980 '
15990 CMP.SKP.STR.S$=SKP.STR$:GOSUB *CMP.SKP.STR
16000 IF CMP.SKP.STR.N<0 THEN CMP.SKP.STR.N=SKP.STR.DEF:ERROR.CODE=112:GOSUB *MAIN.6600
16010 '
16020 CMP.PRF.STR.S$=PRF.STR$:GOSUB *CMP.PRF.STR
16030 IF CMP.PRF.STR.N<0 THEN CMP.PRF.STR.N=PRF.STR.DEF:ERROR.CODE=113:GOSUB *MAIN.6600
16040 IF CMP.PRF.STR.N=1 AND CMP.SKP.STR.N=1 THEN ERROR.CODE=111:GOSUB *MAIN.6600:CMP.PRF.STR.N=0:CMP.SKP.STR.N=0
16050 MAIN.W1=(CMP.SKP.STR.N*4+CMP.PRF.STR.N*8+3) AND &HF
16060 IF MCH MOD 2=0 THEN MAIN.W1=MAIN.W1*16
16070 D(&H1202+(MCH-1)\2)=D(&H1202+(MCH-1)\2) OR MAIN.W1
16080 IF MGL.STR$="" THEN GOTO *MAIN.6099
16090 MGL.STR=VAL(MGL.STR$):IF MGL.STR<1 OR MGL.STR>9 THEN ERROR.CODE=110:GOSUB *MAIN.6600:GOTO *MAIN.6099
16100 IF MG(MGL.STR)>47 THEN ERROR.CODE=153:GOSUB *MAIN.6600:GOTO *MAIN.6099
16110 D(&HEA2+(MGL.STR-1)*96+MG(MGL.STR)*2)=(MCH-1) \ 256
16120 D(&HEA2+(MGL.STR-1)*96+MG(MGL.STR)*2+1)=(MCH-1) MOD 256
16130 MG(MGL.STR)=MG(MGL.STR)+1
16140 *MAIN.6099
16150 GOTO *MAIN.6010
16160 '
16170 *MAIN.6600
16180 PRINT ERROR.MES$(ERROR.CODE)
16190 PRINT #2,ERROR.MES$(ERROR.CODE)
16200 IF ERROR.CODE=>150 THEN F.ERROR=1
16210 RETURN
16220 *MAIN.6700
16230 PRINT #2,ERROR.MES$(ERROR.CODE)
16240 GOTO *FINISH
16250 *MAIN.6800
16260 FOR MAIN.W=1 TO 9
16270 IF MG(MAIN.W)<=0 THEN GOTO *MAIN.6810
16280 D(&H742+(MAIN.W-1)*2)=0
16290 D(&H742+(MAIN.W-1)*2+1)=MG(MAIN.W)-1
16300 D(&H5BA)=0:D(&H63A)=0
16310 D(&H5BB)=MAIN.W-1:D(&H63B)=MAIN.W-1
16320 *MAIN.6810
16330 NEXT
16340 MAIN.W0=0:MAIN.W1=0
16350 FOR MAIN.W=0 TO &H7F
16360 MAIN.W0=(MAIN.W0+D(&H592+MAIN.W)) MOD 256
16370 MAIN.W1=(MAIN.W1+D(&H612+MAIN.W)) MOD 256
16380 NEXT
16390 D(&H611)=MAIN.W0
16400 D(&H691)=MAIN.W1
16410 MAIN.W0=0
16420 FOR MAIN.W=0 TO &H3F51
16430 MAIN.W0=(MAIN.W0+D(MAIN.W)) MOD 256
16440 NEXT
16450 D(&H3F52)=MAIN.W0
16460 IF F.ERROR<>0 THEN ERROR.CODE=152:GOTO *FINISH
16470 LINE INPUT "ƒNƒ[ƒ“ƒf[ƒ^io—Íjƒtƒ@ƒCƒ‹F",OUT.FILE$
16480 OPEN OUT.FILE$ FOR OUTPUT AS #3
16490 FOR RR=0 TO &H3F52
16500 PRINT #3,HEX.CHR$(RR \ 256)+HEX.CHR$(RR MOD 256)+" : "+HEX.CHR$(D(RR))
16510 NEXT
16520 ERROR.CODE=0:GOTO *FINISH
16530 '
16540 *MAIN.6900
16550 DATA 102,"*** ƒXƒeƒbƒv‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(102) ***"
16560 DATA 103,"*** ’P^•¡‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(103) ***"
16570 DATA 104,"*** ƒpƒ[‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(104) ***"
16580 DATA 105,"*** ƒ‚[ƒh‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(105) ***"
16590 DATA 106,"*** ƒg[ƒ“‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(106) ***"
16600 DATA 107,"*** ‚c‚b‚r‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(107) ***"
16610 DATA 108,"*** ƒXƒPƒ‹ƒ`‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(108) ***"
16620 DATA 109,"*** ‚g‚c‚u‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(109) ***"
16630 DATA 110,  "*** ƒƒ‚ƒŠ[ƒOƒ‹[ƒv‚ÌŽw’è‚É•s³‚ª‚ ‚èA–³Ž‹‚µ‚Ü‚µ‚½B(110) ***"
16640 DATA 111,  "*** ƒXƒLƒbƒv‚Æ“ÁŽê‚ð“¯ŽžŽw’è‚Å‚«‚È‚¢‚Ì‚ÅA‘o•û‚Æ‚à‚n‚e‚e‚É‚µ‚Ü‚µ‚½B(111) ***"
16650 DATA 112,"*** ƒXƒLƒbƒv‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(112) ***"
16660 DATA 113,"*** “ÁŽê‚ÌŽw’è‚É•s³‚ª‚ ‚èAƒfƒtƒHƒ‹ƒg‚É’uŠ·‚µ‚Ü‚µ‚½B(113) ***"
16670 DATA 150,"*** Žw’è‚³‚ê‚½ƒ^ƒO•¶Žš—ñ‚Ì’†‚ÉŽg—p‚Å‚«‚È‚¢•¶Žš‚ª‚ ‚è‚Ü‚·B(150) ***"
16680 DATA 151,"*** Žü”g”‚ÌŽw’è‚É•s³‚ª‚ ‚è‚Ü‚·B(151) ***"
16690 DATA 152,"*** ’v–½“I‚ÈƒGƒ‰[‚ª‚ ‚è‚Ü‚µ‚½B(152) ***"
16700 DATA 153,"*** ƒƒ‚ƒŠƒOƒ‹[ƒv‚Ì”‚ª‘½‚·‚¬‚Ü‚·B(153) ***"
16710 DATA 154,"*** ƒXƒeƒbƒv‚ÆŽü”g”‚ÌŠÔ‚É®‡«‚ª‚ ‚è‚Ü‚¹‚ñB(154) ***"
16720 DATA 155,"*** Žw’è‚³‚ê‚½Žü”g”‚ÍA‚u‚w|‚V‚ÌŽóM”ÍˆÍŠO‚Å‚·B(155) ***"
16730 DATA 156,"*** ƒXƒeƒbƒv‚Æƒoƒ“ƒh‚ÌŠÔ‚É®‡«‚ª‚ ‚è‚Ü‚¹‚ñB(156) ***"
16740 DATA 157,"*** ƒƒ‚ƒŠ”Ô†‚ª•s³‚Å‚·B(157) ***"
16750 DATA -1,""
16760 *MAIN.6950
16770 MAIN.W12$="000"+MAIN.W13$+"0000"
16780 MAIN.W10=LEN(MAIN.W12$)
16790 MAIN.W11=INSTR(1,MAIN.W12$,".")
16800 IF MAIN.W11=0 THEN MAIN.W11=LEN("000"+MAIN.W13$)
16810 IF MAIN.W11<=3 THEN MAIN.W11=4
16820 MAIN.FH$=MID$(MAIN.W12$,MAIN.W11-3,3)
16830 MAIN.FL$=MID$(MAIN.W12$,MAIN.W11+1,3)
16840 MAIN.FLX$=MID$(MAIN.W12$,MAIN.W11+1,4)
16850 'color 4:PRINT MAIN.FH$,MAIN.FL$,MAIN.FLX$:color 7
16860 MAIN.FH=VAL(MAIN.FH$)
16870 MAIN.FL=VAL(MAIN.FLX$)
16880 MAIN.W100$=MID$(MAIN.FH$+MAIN.FL$,1,2):MAIN.W100=VAL("&H"+MAIN.W100$)
16890 MAIN.W101$=MID$(MAIN.FH$+MAIN.FL$,3,2):MAIN.W101=VAL("&H"+MAIN.W101$)
16900 MAIN.W102$=MID$(MAIN.FH$+MAIN.FL$,5,2):MAIN.W102=VAL("&H"+MAIN.W102$)
16910 IF HEX.CHR$(MAIN.W100)<>MAIN.W100$ THEN ERROR.CODE=151:RETURN
16920 IF HEX.CHR$(MAIN.W101)<>MAIN.W101$ THEN ERROR.CODE=151:RETURN
16930 IF HEX.CHR$(MAIN.W102)<>MAIN.W102$ THEN ERROR.CODE=151:RETURN
16940 ERROR.CODE=0:RETURN
16950 '
16960 '
16970 *MAIN.7000
16980 MEMORY.STR$=""
16990 MEMORY.STR$=MEMORY.STR$+MCH.STR$+","
17000 MEMORY.STR$=MEMORY.STR$+FRQ0.STR$+","
17010 MEMORY.STR$=MEMORY.STR$+STP.STR$+","
17020 MEMORY.STR$=MEMORY.STR$+TAG.STR$+","
17030 MEMORY.STR$=MEMORY.STR$+MGL.STR$+","
17040 MEMORY.STR$=MEMORY.STR$+SMP.STR$+","
17050 MEMORY.STR$=MEMORY.STR$+FRQ1.STR$+","
17060 MEMORY.STR$=MEMORY.STR$+MDE.STR$+","
17070 MEMORY.STR$=MEMORY.STR$+SQL.STR$+","
17080 MEMORY.STR$=MEMORY.STR$+TON.STR$+","
17090 MEMORY.STR$=MEMORY.STR$+DCS.STR$+","
17100 MEMORY.STR$=MEMORY.STR$+PWR.STR$+","
17110 MEMORY.STR$=MEMORY.STR$+HDV.STR$+","
17120 MEMORY.STR$=MEMORY.STR$+SKP.STR$+","
17130 MEMORY.STR$=MEMORY.STR$+PRF.STR$
17140 RETURN
17150 '
17160 *MAIN.7050
17170 MCH.STR$="ƒƒ‚ƒŠ”Ô†"
17180 FRQ0.STR$="Žü”g”"
17190 STP.STR$="ƒXƒeƒbƒv"
17200 TAG.STR$="ƒ^ƒO"
17210 MGL.STR$="‚l‚f"
17220 SMP.STR$="’P^•¡"
17230 FRQ1.STR$="Žü”g”f"
17240 MDE.STR$="ƒ‚[ƒh"
17250 SQL.STR$="ƒXƒPƒ‹ƒ`"
17260 TON.STR$="ƒg[ƒ“"
17270 DCS.STR$="‚c‚b‚r"
17280 PWR.STR$="o—Í"
17290 HDV.STR$="•Ï’²“x"
17300 SKP.STR$="ƒXƒLƒbƒv"
17310 PRF.STR$="“ÁŽê"
17320 RETURN
17330 '
17340 *MAIN.7100
17350 CMP.BND.STR.N=-1
17360 IF (MAIN.FH=0) AND (MAIN.FL<5040) THEN RETURN
17370 IF MAIN.FH=0 THEN CMP.BND.STR.N=0:RETURN
17380 IF (MAIN.FH=1) AND (MAIN.FL<8000) THEN CMP.BND.STR.N=0:RETURN
17390 IF MAIN.FH<30 THEN CMP.BND.STR.N=1:RETURN
17400 IF MAIN.FH<76 THEN CMP.BND.STR.N=5:RETURN
17410 IF MAIN.FH<88 THEN CMP.BND.STR.N=3:RETURN
17420 IF MAIN.FH<108 THEN CMP.BND.STR.N=4:RETURN
17430 IF MAIN.FH<137 THEN CMP.BND.STR.N=9:RETURN
17440 IF MAIN.FH<174 THEN CMP.BND.STR.N=6:RETURN
17450 IF MAIN.FH<222 THEN CMP.BND.STR.N=4:RETURN
17460 IF MAIN.FH<420 THEN CMP.BND.STR.N=10:RETURN
17470 IF MAIN.FH<470 THEN CMP.BND.STR.N=8:RETURN
17480 IF MAIN.FH<770 THEN CMP.BND.STR.N=4:RETURN
17490 IF MAIN.FH<999 THEN CMP.BND.STR.N=11:RETURN
17500 RETURN
















= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages